<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ThoughtWorks.QRCode.Fakes</name>
    </assembly>
    <members>
        <member name="T:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeBitmapImage">
            <summary>ThoughtWorks.QRCode.Codec.Data.QRCodeBitmapImage 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeBitmapImage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeBitmapImage.#ctor(ThoughtWorks.QRCode.Codec.Data.QRCodeBitmapImage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeBitmapImage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeBitmapImage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeBitmapImage.Bind(ThoughtWorks.QRCode.Codec.Data.QRCodeImage)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeBitmapImage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeBitmapImage.ConstructorBitmap">
            <summary>设置 QRCodeBitmapImage.QRCodeBitmapImage(Bitmap image) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeBitmapImage.HeightGet">
            <summary>设置 QRCodeBitmapImage.get_Height() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeBitmapImage.WidthGet">
            <summary>设置 QRCodeBitmapImage.get_Width() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeBitmapImage.getPixelInt32Int32">
            <summary>设置 QRCodeBitmapImage.getPixel(Int32 x, Int32 y) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeBitmapImage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeBitmapImage.AllInstances.HeightGet">
            <summary>设置 QRCodeBitmapImage.get_Height() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeBitmapImage.AllInstances.WidthGet">
            <summary>设置 QRCodeBitmapImage.get_Width() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeBitmapImage.AllInstances.getPixelInt32Int32">
            <summary>设置 QRCodeBitmapImage.getPixel(Int32 x, Int32 y) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol">
            <summary>ThoughtWorks.QRCode.Codec.Data.QRCodeSymbol 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.#ctor(ThoughtWorks.QRCode.Codec.Data.QRCodeSymbol)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.AlignmentPatternGet">
            <summary>设置 QRCodeSymbol.get_AlignmentPattern() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.BlocksGet">
            <summary>设置 QRCodeSymbol.get_Blocks() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.ConstructorBooleanArrayArray">
            <summary>设置 QRCodeSymbol.QRCodeSymbol(Boolean[][] moduleMatrix) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.DataCapacityGet">
            <summary>设置 QRCodeSymbol.get_DataCapacity() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.ErrorCollectionLevelGet">
            <summary>设置 QRCodeSymbol.get_ErrorCollectionLevel() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.HeightGet">
            <summary>设置 QRCodeSymbol.get_Height() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.MaskPatternRefererAsStringGet">
            <summary>设置 QRCodeSymbol.get_MaskPatternRefererAsString() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.MaskPatternRefererGet">
            <summary>设置 QRCodeSymbol.get_MaskPatternReferer() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.NumErrorCollectionCodeGet">
            <summary>设置 QRCodeSymbol.get_NumErrorCollectionCode() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.NumRSBlocksGet">
            <summary>设置 QRCodeSymbol.get_NumRSBlocks() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.VersionGet">
            <summary>设置 QRCodeSymbol.get_Version() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.VersionReferenceGet">
            <summary>设置 QRCodeSymbol.get_VersionReference() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.WidthGet">
            <summary>设置 QRCodeSymbol.get_Width() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.calcDataCapacity">
            <summary>设置 QRCodeSymbol.calcDataCapacity() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.decodeFormatInformationBooleanArray">
            <summary>设置 QRCodeSymbol.decodeFormatInformation(Boolean[] formatInformation) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.generateMaskPattern">
            <summary>设置 QRCodeSymbol.generateMaskPattern() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.getElementInt32Int32">
            <summary>设置 QRCodeSymbol.getElement(Int32 x, Int32 y) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.initialize">
            <summary>设置 QRCodeSymbol.initialize() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.isInFunctionPatternInt32Int32">
            <summary>设置 QRCodeSymbol.isInFunctionPattern(Int32 targetX, Int32 targetY) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.readFormatInformation">
            <summary>设置 QRCodeSymbol.readFormatInformation() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.reverseElementInt32Int32">
            <summary>设置 QRCodeSymbol.reverseElement(Int32 x, Int32 y) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.unmask">
            <summary>设置 QRCodeSymbol.unmask() 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.AllInstances.AlignmentPatternGet">
            <summary>设置 QRCodeSymbol.get_AlignmentPattern() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.AllInstances.BlocksGet">
            <summary>设置 QRCodeSymbol.get_Blocks() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.AllInstances.DataCapacityGet">
            <summary>设置 QRCodeSymbol.get_DataCapacity() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.AllInstances.ErrorCollectionLevelGet">
            <summary>设置 QRCodeSymbol.get_ErrorCollectionLevel() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.AllInstances.HeightGet">
            <summary>设置 QRCodeSymbol.get_Height() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.AllInstances.MaskPatternRefererAsStringGet">
            <summary>设置 QRCodeSymbol.get_MaskPatternRefererAsString() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.AllInstances.MaskPatternRefererGet">
            <summary>设置 QRCodeSymbol.get_MaskPatternReferer() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.AllInstances.NumErrorCollectionCodeGet">
            <summary>设置 QRCodeSymbol.get_NumErrorCollectionCode() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.AllInstances.NumRSBlocksGet">
            <summary>设置 QRCodeSymbol.get_NumRSBlocks() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.AllInstances.VersionGet">
            <summary>设置 QRCodeSymbol.get_Version() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.AllInstances.VersionReferenceGet">
            <summary>设置 QRCodeSymbol.get_VersionReference() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.AllInstances.WidthGet">
            <summary>设置 QRCodeSymbol.get_Width() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.AllInstances.calcDataCapacity">
            <summary>设置 QRCodeSymbol.calcDataCapacity() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.AllInstances.decodeFormatInformationBooleanArray">
            <summary>设置 QRCodeSymbol.decodeFormatInformation(Boolean[] formatInformation) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.AllInstances.generateMaskPattern">
            <summary>设置 QRCodeSymbol.generateMaskPattern() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.AllInstances.getElementInt32Int32">
            <summary>设置 QRCodeSymbol.getElement(Int32 x, Int32 y) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.AllInstances.initialize">
            <summary>设置 QRCodeSymbol.initialize() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.AllInstances.isInFunctionPatternInt32Int32">
            <summary>设置 QRCodeSymbol.isInFunctionPattern(Int32 targetX, Int32 targetY) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.AllInstances.readFormatInformation">
            <summary>设置 QRCodeSymbol.readFormatInformation() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.AllInstances.reverseElementInt32Int32">
            <summary>设置 QRCodeSymbol.reverseElement(Int32 x, Int32 y) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.ShimQRCodeSymbol.AllInstances.unmask">
            <summary>设置 QRCodeSymbol.unmask() 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeBitmapImage">
            <summary>ThoughtWorks.QRCode.Codec.Data.QRCodeBitmapImage 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeBitmapImage.#ctor(System.Drawing.Bitmap)">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeBitmapImage.GetPixelInt32Int32">
            <summary>设置 QRCodeBitmapImage.getPixel(Int32 x, Int32 y) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeBitmapImage.HeightGet">
            <summary>设置 QRCodeBitmapImage.get_Height() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeBitmapImage.InitializeStub">
            <summary>初始化 type StubQRCodeBitmapImage 的新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeBitmapImage.WidthGet">
            <summary>设置 QRCodeBitmapImage.get_Width() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeBitmapImage.getPixel(System.Int32,System.Int32)">
            <summary>设置 QRCodeBitmapImage.getPixel(Int32 x, Int32 y) 的 存根</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeBitmapImage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeBitmapImage.Height">
            <summary>设置 QRCodeBitmapImage.get_Height() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeBitmapImage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeBitmapImage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeBitmapImage.Width">
            <summary>设置 QRCodeBitmapImage.get_Width() 的 stub</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeImage">
            <summary>ThoughtWorks.QRCode.Codec.Data.QRCodeImage 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeImage.#ctor">
            <summary>初始化 type StubQRCodeImage 的新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeImage.GetPixelInt32Int32">
            <summary>设置 QRCodeImage.getPixel(Int32 x, Int32 y) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeImage.HeightGet">
            <summary>设置 QRCodeImage.get_Height() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeImage.twqrc::ThoughtWorks#QRCode#Codec#Data#QRCodeImage#getPixel(System.Int32,System.Int32)">
            <summary>设置 QRCodeImage.getPixel(Int32 x, Int32 y) 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeImage.WidthGet">
            <summary>设置 QRCodeImage.get_Width() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeImage.twqrc::ThoughtWorks#QRCode#Codec#Data#QRCodeImage#Height">
            <summary>设置 QRCodeImage.get_Height() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeImage.twqrc::ThoughtWorks#QRCode#Codec#Data#QRCodeImage#Width">
            <summary>设置 QRCodeImage.get_Width() 的 stub</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol">
            <summary>ThoughtWorks.QRCode.Codec.Data.QRCodeSymbol 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.#ctor(System.Boolean[][])">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.AlignmentPatternGet">
            <summary>设置 QRCodeSymbol.get_AlignmentPattern() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.BlocksGet">
            <summary>设置 QRCodeSymbol.get_Blocks() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.DataCapacityGet">
            <summary>设置 QRCodeSymbol.get_DataCapacity() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.ErrorCollectionLevelGet">
            <summary>设置 QRCodeSymbol.get_ErrorCollectionLevel() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.GetElementInt32Int32">
            <summary>设置 QRCodeSymbol.getElement(Int32 x, Int32 y) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.HeightGet">
            <summary>设置 QRCodeSymbol.get_Height() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.InitializeStub">
            <summary>初始化 type StubQRCodeSymbol 的新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.IsInFunctionPatternInt32Int32">
            <summary>设置 QRCodeSymbol.isInFunctionPattern(Int32 targetX, Int32 targetY) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.MaskPatternRefererAsStringGet">
            <summary>设置 QRCodeSymbol.get_MaskPatternRefererAsString() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.MaskPatternRefererGet">
            <summary>设置 QRCodeSymbol.get_MaskPatternReferer() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.NumErrorCollectionCodeGet">
            <summary>设置 QRCodeSymbol.get_NumErrorCollectionCode() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.NumRSBlocksGet">
            <summary>设置 QRCodeSymbol.get_NumRSBlocks() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.ReverseElementInt32Int32">
            <summary>设置 QRCodeSymbol.reverseElement(Int32 x, Int32 y) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.VersionGet">
            <summary>设置 QRCodeSymbol.get_Version() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.VersionReferenceGet">
            <summary>设置 QRCodeSymbol.get_VersionReference() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.WidthGet">
            <summary>设置 QRCodeSymbol.get_Width() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.getElement(System.Int32,System.Int32)">
            <summary>设置 QRCodeSymbol.getElement(Int32 x, Int32 y) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.isInFunctionPattern(System.Int32,System.Int32)">
            <summary>设置 QRCodeSymbol.isInFunctionPattern(Int32 targetX, Int32 targetY) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.reverseElement(System.Int32,System.Int32)">
            <summary>设置 QRCodeSymbol.reverseElement(Int32 x, Int32 y) 的 存根</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.AlignmentPattern">
            <summary>设置 QRCodeSymbol.get_AlignmentPattern() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.Blocks">
            <summary>设置 QRCodeSymbol.get_Blocks() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.DataCapacity">
            <summary>设置 QRCodeSymbol.get_DataCapacity() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.ErrorCollectionLevel">
            <summary>设置 QRCodeSymbol.get_ErrorCollectionLevel() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.Height">
            <summary>设置 QRCodeSymbol.get_Height() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.MaskPatternReferer">
            <summary>设置 QRCodeSymbol.get_MaskPatternReferer() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.MaskPatternRefererAsString">
            <summary>设置 QRCodeSymbol.get_MaskPatternRefererAsString() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.NumErrorCollectionCode">
            <summary>设置 QRCodeSymbol.get_NumErrorCollectionCode() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.NumRSBlocks">
            <summary>设置 QRCodeSymbol.get_NumRSBlocks() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.Version">
            <summary>设置 QRCodeSymbol.get_Version() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.VersionReference">
            <summary>设置 QRCodeSymbol.get_VersionReference() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Data.Fakes.StubQRCodeSymbol.Width">
            <summary>设置 QRCodeSymbol.get_Width() 的 stub</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5">
            <summary>ThoughtWorks.QRCode.Codec.Ecc.BCH15_5 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.#ctor(ThoughtWorks.QRCode.Codec.Ecc.BCH15_5)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.ConstructorBooleanArray">
            <summary>设置 BCH15_5.BCH15_5(Boolean[] source) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.NumCorrectedErrorGet">
            <summary>设置 BCH15_5.get_NumCorrectedError() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.StaticConstructor">
            <summary>设置 BCH15_5.BCH15_5() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.addGFInt32Int32">
            <summary>设置 BCH15_5.addGF(Int32 arg1, Int32 arg2) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.calcErrorPositionVariableInt32Array">
            <summary>设置 BCH15_5.calcErrorPositionVariable(Int32[] s) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.calcSyndromeBooleanArray">
            <summary>设置 BCH15_5.calcSyndrome(Boolean[] y) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.correct">
            <summary>设置 BCH15_5.correct() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.correctErrorBitBooleanArrayInt32Array">
            <summary>设置 BCH15_5.correctErrorBit(Boolean[] y, Int32[] errorPos) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.createGF16">
            <summary>设置 BCH15_5.createGF16() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.detectErrorBitPositionInt32Array">
            <summary>设置 BCH15_5.detectErrorBitPosition(Int32[] s) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.getCodeInt32">
            <summary>设置 BCH15_5.getCode(Int32 input) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.searchElementInt32Array">
            <summary>设置 BCH15_5.searchElement(Int32[] x) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.AllInstances.NumCorrectedErrorGet">
            <summary>设置 BCH15_5.get_NumCorrectedError() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.AllInstances.addGFInt32Int32">
            <summary>设置 BCH15_5.addGF(Int32 arg1, Int32 arg2) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.AllInstances.calcErrorPositionVariableInt32Array">
            <summary>设置 BCH15_5.calcErrorPositionVariable(Int32[] s) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.AllInstances.calcSyndromeBooleanArray">
            <summary>设置 BCH15_5.calcSyndrome(Boolean[] y) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.AllInstances.correct">
            <summary>设置 BCH15_5.correct() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.AllInstances.correctErrorBitBooleanArrayInt32Array">
            <summary>设置 BCH15_5.correctErrorBit(Boolean[] y, Int32[] errorPos) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.AllInstances.createGF16">
            <summary>设置 BCH15_5.createGF16() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.AllInstances.detectErrorBitPositionInt32Array">
            <summary>设置 BCH15_5.detectErrorBitPosition(Int32[] s) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.AllInstances.getCodeInt32">
            <summary>设置 BCH15_5.getCode(Int32 input) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimBCH15_5.AllInstances.searchElementInt32Array">
            <summary>设置 BCH15_5.searchElement(Int32[] x) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon">
            <summary>ThoughtWorks.QRCode.Codec.Ecc.ReedSolomon 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.#ctor(ThoughtWorks.QRCode.Codec.Ecc.ReedSolomon)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.ConstructorInt32ArrayInt32">
            <summary>设置 ReedSolomon.ReedSolomon(Int32[] source, Int32 NPAR) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.CorrectionSucceededGet">
            <summary>设置 ReedSolomon.get_CorrectionSucceeded() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.Find_Roots">
            <summary>设置 ReedSolomon.Find_Roots() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.Modified_Berlekamp_Massey">
            <summary>设置 ReedSolomon.Modified_Berlekamp_Massey() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.NumCorrectedErrorsGet">
            <summary>设置 ReedSolomon.get_NumCorrectedErrors() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.add_polysInt32ArrayInt32Array">
            <summary>设置 ReedSolomon.add_polys(Int32[] dst, Int32[] src) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.compute_discrepancyInt32ArrayInt32ArrayInt32Int32">
            <summary>设置 ReedSolomon.compute_discrepancy(Int32[] lambda, Int32[] S, Int32 L, Int32 n) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.compute_modified_omega">
            <summary>设置 ReedSolomon.compute_modified_omega() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.compute_next_omegaInt32Int32ArrayInt32ArrayInt32Array">
            <summary>设置 ReedSolomon.compute_next_omega(Int32 d, Int32[] A, Int32[] dst, Int32[] src) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.copy_polyInt32ArrayInt32Array">
            <summary>设置 ReedSolomon.copy_poly(Int32[] dst, Int32[] src) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.correct">
            <summary>设置 ReedSolomon.correct() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.correct_errors_erasuresInt32ArrayInt32Int32Int32Array">
            <summary>设置 ReedSolomon.correct_errors_erasures(Int32[] codeword, Int32 csize, Int32 nerasures, Int32[] erasures) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.decode_dataInt32Array">
            <summary>设置 ReedSolomon.decode_data(Int32[] data) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.ginvInt32">
            <summary>设置 ReedSolomon.ginv(Int32 elt) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.gmultInt32Int32">
            <summary>设置 ReedSolomon.gmult(Int32 a, Int32 b) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.init_gammaInt32Array">
            <summary>设置 ReedSolomon.init_gamma(Int32[] gamma) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.initializeGaloisTables">
            <summary>设置 ReedSolomon.initializeGaloisTables() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.mul_z_polyInt32Array">
            <summary>设置 ReedSolomon.mul_z_poly(Int32[] src) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.mult_polysInt32ArrayInt32ArrayInt32Array">
            <summary>设置 ReedSolomon.mult_polys(Int32[] dst, Int32[] p1, Int32[] p2) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.scale_polyInt32Int32Array">
            <summary>设置 ReedSolomon.scale_poly(Int32 k, Int32[] poly) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.zero_polyInt32Array">
            <summary>设置 ReedSolomon.zero_poly(Int32[] poly) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.AllInstances.CorrectionSucceededGet">
            <summary>设置 ReedSolomon.get_CorrectionSucceeded() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.AllInstances.Find_Roots">
            <summary>设置 ReedSolomon.Find_Roots() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.AllInstances.Modified_Berlekamp_Massey">
            <summary>设置 ReedSolomon.Modified_Berlekamp_Massey() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.AllInstances.NumCorrectedErrorsGet">
            <summary>设置 ReedSolomon.get_NumCorrectedErrors() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.AllInstances.add_polysInt32ArrayInt32Array">
            <summary>设置 ReedSolomon.add_polys(Int32[] dst, Int32[] src) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.AllInstances.compute_discrepancyInt32ArrayInt32ArrayInt32Int32">
            <summary>设置 ReedSolomon.compute_discrepancy(Int32[] lambda, Int32[] S, Int32 L, Int32 n) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.AllInstances.compute_modified_omega">
            <summary>设置 ReedSolomon.compute_modified_omega() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.AllInstances.compute_next_omegaInt32Int32ArrayInt32ArrayInt32Array">
            <summary>设置 ReedSolomon.compute_next_omega(Int32 d, Int32[] A, Int32[] dst, Int32[] src) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.AllInstances.copy_polyInt32ArrayInt32Array">
            <summary>设置 ReedSolomon.copy_poly(Int32[] dst, Int32[] src) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.AllInstances.correct">
            <summary>设置 ReedSolomon.correct() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.AllInstances.correct_errors_erasuresInt32ArrayInt32Int32Int32Array">
            <summary>设置 ReedSolomon.correct_errors_erasures(Int32[] codeword, Int32 csize, Int32 nerasures, Int32[] erasures) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.AllInstances.decode_dataInt32Array">
            <summary>设置 ReedSolomon.decode_data(Int32[] data) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.AllInstances.ginvInt32">
            <summary>设置 ReedSolomon.ginv(Int32 elt) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.AllInstances.gmultInt32Int32">
            <summary>设置 ReedSolomon.gmult(Int32 a, Int32 b) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.AllInstances.init_gammaInt32Array">
            <summary>设置 ReedSolomon.init_gamma(Int32[] gamma) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.AllInstances.initializeGaloisTables">
            <summary>设置 ReedSolomon.initializeGaloisTables() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.AllInstances.mul_z_polyInt32Array">
            <summary>设置 ReedSolomon.mul_z_poly(Int32[] src) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.AllInstances.mult_polysInt32ArrayInt32ArrayInt32Array">
            <summary>设置 ReedSolomon.mult_polys(Int32[] dst, Int32[] p1, Int32[] p2) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.AllInstances.scale_polyInt32Int32Array">
            <summary>设置 ReedSolomon.scale_poly(Int32 k, Int32[] poly) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.ShimReedSolomon.AllInstances.zero_polyInt32Array">
            <summary>设置 ReedSolomon.zero_poly(Int32[] poly) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Ecc.Fakes.StubBCH15_5">
            <summary>ThoughtWorks.QRCode.Codec.Ecc.BCH15_5 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Ecc.Fakes.StubBCH15_5.#ctor(System.Boolean[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Ecc.Fakes.StubBCH15_5.Correct">
            <summary>设置 BCH15_5.correct() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Ecc.Fakes.StubBCH15_5.InitializeStub">
            <summary>初始化 type StubBCH15_5 的新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Ecc.Fakes.StubBCH15_5.NumCorrectedErrorGet">
            <summary>设置 BCH15_5.get_NumCorrectedError() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Ecc.Fakes.StubBCH15_5.correct">
            <summary>设置 BCH15_5.correct() 的 存根</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.StubBCH15_5.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.StubBCH15_5.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.StubBCH15_5.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.StubBCH15_5.NumCorrectedError">
            <summary>设置 BCH15_5.get_NumCorrectedError() 的 stub</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Ecc.Fakes.StubReedSolomon">
            <summary>ThoughtWorks.QRCode.Codec.Ecc.ReedSolomon 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Ecc.Fakes.StubReedSolomon.#ctor(System.Int32[],System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Ecc.Fakes.StubReedSolomon.Correct">
            <summary>设置 ReedSolomon.correct() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Ecc.Fakes.StubReedSolomon.CorrectionSucceededGet">
            <summary>设置 ReedSolomon.get_CorrectionSucceeded() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Ecc.Fakes.StubReedSolomon.InitializeStub">
            <summary>初始化 type StubReedSolomon 的新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Ecc.Fakes.StubReedSolomon.NumCorrectedErrorsGet">
            <summary>设置 ReedSolomon.get_NumCorrectedErrors() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Ecc.Fakes.StubReedSolomon.correct">
            <summary>设置 ReedSolomon.correct() 的 存根</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.StubReedSolomon.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.StubReedSolomon.CorrectionSucceeded">
            <summary>设置 ReedSolomon.get_CorrectionSucceeded() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.StubReedSolomon.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.StubReedSolomon.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Ecc.Fakes.StubReedSolomon.NumCorrectedErrors">
            <summary>设置 ReedSolomon.get_NumCorrectedErrors() 的 stub</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeDecoder">
            <summary>ThoughtWorks.QRCode.Codec.QRCodeDecoder 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeDecoder.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeDecoder.#ctor(ThoughtWorks.QRCode.Codec.QRCodeDecoder)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeDecoder.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeDecoder.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeDecoder.AdjustPointsGet">
            <summary>设置 QRCodeDecoder.get_AdjustPoints() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeDecoder.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeDecoder.CanvasGet">
            <summary>设置 QRCodeDecoder.get_Canvas() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeDecoder.CanvasSetDebugCanvas">
            <summary>设置 QRCodeDecoder.set_Canvas(DebugCanvas value) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeDecoder.Constructor">
            <summary>设置 QRCodeDecoder.QRCodeDecoder() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeDecoder.correctDataBlocksInt32Array">
            <summary>设置 QRCodeDecoder.correctDataBlocks(Int32[] blocks) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeDecoder.decodeBytesQRCodeImage">
            <summary>设置 QRCodeDecoder.decodeBytes(QRCodeImage qrCodeImage) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeDecoder.decodeQRCodeImage">
            <summary>设置 QRCodeDecoder.decode(QRCodeImage qrCodeImage) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeDecoder.getDecodedByteArrayInt32ArrayInt32Int32">
            <summary>设置 QRCodeDecoder.getDecodedByteArray(Int32[] blocks, Int32 version, Int32 numErrorCorrectionCode) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeDecoder.getDecodedStringInt32ArrayInt32Int32">
            <summary>设置 QRCodeDecoder.getDecodedString(Int32[] blocks, Int32 version, Int32 numErrorCorrectionCode) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeDecoder.imageToIntArrayQRCodeImage">
            <summary>设置 QRCodeDecoder.imageToIntArray(QRCodeImage image) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeDecoder.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeDecoder.AllInstances.AdjustPointsGet">
            <summary>设置 QRCodeDecoder.get_AdjustPoints() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeDecoder.AllInstances.correctDataBlocksInt32Array">
            <summary>设置 QRCodeDecoder.correctDataBlocks(Int32[] blocks) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeDecoder.AllInstances.decodeBytesQRCodeImage">
            <summary>设置 QRCodeDecoder.decodeBytes(QRCodeImage qrCodeImage) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeDecoder.AllInstances.decodeQRCodeImage">
            <summary>设置 QRCodeDecoder.decode(QRCodeImage qrCodeImage) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeDecoder.AllInstances.getDecodedByteArrayInt32ArrayInt32Int32">
            <summary>设置 QRCodeDecoder.getDecodedByteArray(Int32[] blocks, Int32 version, Int32 numErrorCorrectionCode) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeDecoder.AllInstances.getDecodedStringInt32ArrayInt32Int32">
            <summary>设置 QRCodeDecoder.getDecodedString(Int32[] blocks, Int32 version, Int32 numErrorCorrectionCode) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeDecoder.AllInstances.imageToIntArrayQRCodeImage">
            <summary>设置 QRCodeDecoder.imageToIntArray(QRCodeImage image) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder">
            <summary>ThoughtWorks.QRCode.Codec.QRCodeEncoder 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.#ctor(ThoughtWorks.QRCode.Codec.QRCodeEncoder)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.Constructor">
            <summary>设置 QRCodeEncoder.QRCodeEncoder() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.EncodeString">
            <summary>设置 QRCodeEncoder.Encode(String content) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.QRCodeBackgroundColorGet">
            <summary>设置 QRCodeEncoder.get_QRCodeBackgroundColor() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.QRCodeBackgroundColorSetColor">
            <summary>设置 QRCodeEncoder.set_QRCodeBackgroundColor(Color value) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.QRCodeEncodeModeGet">
            <summary>设置 QRCodeEncoder.get_QRCodeEncodeMode() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.QRCodeEncodeModeSetQRCodeEncoderENCODE_MODE">
            <summary>设置 QRCodeEncoder.set_QRCodeEncodeMode(ENCODE_MODE value) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.QRCodeErrorCorrectGet">
            <summary>设置 QRCodeEncoder.get_QRCodeErrorCorrect() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.QRCodeErrorCorrectSetQRCodeEncoderERROR_CORRECTION">
            <summary>设置 QRCodeEncoder.set_QRCodeErrorCorrect(ERROR_CORRECTION value) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.QRCodeForegroundColorGet">
            <summary>设置 QRCodeEncoder.get_QRCodeForegroundColor() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.QRCodeForegroundColorSetColor">
            <summary>设置 QRCodeEncoder.set_QRCodeForegroundColor(Color value) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.QRCodeScaleGet">
            <summary>设置 QRCodeEncoder.get_QRCodeScale() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.QRCodeScaleSetInt32">
            <summary>设置 QRCodeEncoder.set_QRCodeScale(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.QRCodeVersionGet">
            <summary>设置 QRCodeEncoder.get_QRCodeVersion() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.QRCodeVersionSetInt32">
            <summary>设置 QRCodeEncoder.set_QRCodeVersion(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.calQrcodeByteArray">
            <summary>设置 QRCodeEncoder.calQrcode(Byte[] qrcodeData) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.calStructureappendParitySByteArray">
            <summary>设置 QRCodeEncoder.calStructureappendParity(SByte[] originaldata) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.calculateByteArrayBitsSByteArraySByteArrayString">
            <summary>设置 QRCodeEncoder.calculateByteArrayBits(SByte[] xa, SByte[] xb, String ind) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.calculateRSECCSByteArraySByteSByteArrayInt32Int32">
            <summary>设置 QRCodeEncoder.calculateRSECC(SByte[] codewords, SByte rsEccCodewords, SByte[] rsBlockOrder, Int32 maxDataCodewords, Int32 maxCodewords) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.divideDataBy8BitsInt32ArraySByteArrayInt32">
            <summary>设置 QRCodeEncoder.divideDataBy8Bits(Int32[] data, SByte[] bits, Int32 maxDataCodewords) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.selectMaskSByteArrayArrayInt32">
            <summary>设置 QRCodeEncoder.selectMask(SByte[][] matrixContent, Int32 maxCodewordsBitWithRemain) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.setStructureappendInt32Int32Int32">
            <summary>设置 QRCodeEncoder.setStructureappend(Int32 m, Int32 n, Int32 p) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.AllInstances.EncodeString">
            <summary>设置 QRCodeEncoder.Encode(String content) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.AllInstances.QRCodeBackgroundColorGet">
            <summary>设置 QRCodeEncoder.get_QRCodeBackgroundColor() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.AllInstances.QRCodeBackgroundColorSetColor">
            <summary>设置 QRCodeEncoder.set_QRCodeBackgroundColor(Color value) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.AllInstances.QRCodeEncodeModeGet">
            <summary>设置 QRCodeEncoder.get_QRCodeEncodeMode() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.AllInstances.QRCodeEncodeModeSetQRCodeEncoderENCODE_MODE">
            <summary>设置 QRCodeEncoder.set_QRCodeEncodeMode(ENCODE_MODE value) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.AllInstances.QRCodeErrorCorrectGet">
            <summary>设置 QRCodeEncoder.get_QRCodeErrorCorrect() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.AllInstances.QRCodeErrorCorrectSetQRCodeEncoderERROR_CORRECTION">
            <summary>设置 QRCodeEncoder.set_QRCodeErrorCorrect(ERROR_CORRECTION value) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.AllInstances.QRCodeForegroundColorGet">
            <summary>设置 QRCodeEncoder.get_QRCodeForegroundColor() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.AllInstances.QRCodeForegroundColorSetColor">
            <summary>设置 QRCodeEncoder.set_QRCodeForegroundColor(Color value) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.AllInstances.QRCodeScaleGet">
            <summary>设置 QRCodeEncoder.get_QRCodeScale() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.AllInstances.QRCodeScaleSetInt32">
            <summary>设置 QRCodeEncoder.set_QRCodeScale(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.AllInstances.QRCodeVersionGet">
            <summary>设置 QRCodeEncoder.get_QRCodeVersion() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.AllInstances.QRCodeVersionSetInt32">
            <summary>设置 QRCodeEncoder.set_QRCodeVersion(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.AllInstances.calQrcodeByteArray">
            <summary>设置 QRCodeEncoder.calQrcode(Byte[] qrcodeData) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.AllInstances.calStructureappendParitySByteArray">
            <summary>设置 QRCodeEncoder.calStructureappendParity(SByte[] originaldata) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.ShimQRCodeEncoder.AllInstances.setStructureappendInt32Int32Int32">
            <summary>设置 QRCodeEncoder.setStructureappend(Int32 m, Int32 n, Int32 p) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeDecoder">
            <summary>ThoughtWorks.QRCode.Codec.QRCodeDecoder 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeDecoder.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeDecoder.DecodeBytesQRCodeImage">
            <summary>设置 QRCodeDecoder.decodeBytes(QRCodeImage qrCodeImage) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeDecoder.DecodeQRCodeImage">
            <summary>设置 QRCodeDecoder.decode(QRCodeImage qrCodeImage) 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeDecoder.InitializeStub">
            <summary>初始化 type StubQRCodeDecoder 的新实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeDecoder.decode(ThoughtWorks.QRCode.Codec.Data.QRCodeImage)">
            <summary>设置 QRCodeDecoder.decode(QRCodeImage qrCodeImage) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeDecoder.decodeBytes(ThoughtWorks.QRCode.Codec.Data.QRCodeImage)">
            <summary>设置 QRCodeDecoder.decodeBytes(QRCodeImage qrCodeImage) 的 存根</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeDecoder.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeDecoder.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeDecoder.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder">
            <summary>ThoughtWorks.QRCode.Codec.QRCodeEncoder 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.AttachBackingFieldToQRCodeBackgroundColor">
            <summary>附加委托以将 StubQRCodeEncoder.QRCodeBackgroundColor 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.AttachBackingFieldToQRCodeEncodeMode">
            <summary>附加委托以将 StubQRCodeEncoder.QRCodeEncodeMode 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.AttachBackingFieldToQRCodeErrorCorrect">
            <summary>附加委托以将 StubQRCodeEncoder.QRCodeErrorCorrect 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.AttachBackingFieldToQRCodeForegroundColor">
            <summary>附加委托以将 StubQRCodeEncoder.QRCodeForegroundColor 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.AttachBackingFieldToQRCodeScale">
            <summary>附加委托以将 StubQRCodeEncoder.QRCodeScale 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.AttachBackingFieldToQRCodeVersion">
            <summary>附加委托以将 StubQRCodeEncoder.QRCodeVersion 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.CalQrcodeByteArray">
            <summary>设置 QRCodeEncoder.calQrcode(Byte[] qrcodeData) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.CalStructureappendParitySByteArray">
            <summary>设置 QRCodeEncoder.calStructureappendParity(SByte[] originaldata) 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.Encode(System.String)">
            <summary>设置 QRCodeEncoder.Encode(String content) 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.EncodeString">
            <summary>设置 QRCodeEncoder.Encode(String content) 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.InitializeStub">
            <summary>初始化 type StubQRCodeEncoder 的新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.QRCodeBackgroundColorGet">
            <summary>设置 QRCodeEncoder.get_QRCodeBackgroundColor() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.QRCodeBackgroundColorSetColor">
            <summary>设置 QRCodeEncoder.set_QRCodeBackgroundColor(Color value) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.QRCodeEncodeModeGet">
            <summary>设置 QRCodeEncoder.get_QRCodeEncodeMode() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.QRCodeEncodeModeSetQRCodeEncoderENCODE_MODE">
            <summary>设置 QRCodeEncoder.set_QRCodeEncodeMode(ENCODE_MODE value) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.QRCodeErrorCorrectGet">
            <summary>设置 QRCodeEncoder.get_QRCodeErrorCorrect() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.QRCodeErrorCorrectSetQRCodeEncoderERROR_CORRECTION">
            <summary>设置 QRCodeEncoder.set_QRCodeErrorCorrect(ERROR_CORRECTION value) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.QRCodeForegroundColorGet">
            <summary>设置 QRCodeEncoder.get_QRCodeForegroundColor() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.QRCodeForegroundColorSetColor">
            <summary>设置 QRCodeEncoder.set_QRCodeForegroundColor(Color value) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.QRCodeScaleGet">
            <summary>设置 QRCodeEncoder.get_QRCodeScale() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.QRCodeScaleSetInt32">
            <summary>设置 QRCodeEncoder.set_QRCodeScale(Int32 value) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.QRCodeVersionGet">
            <summary>设置 QRCodeEncoder.get_QRCodeVersion() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.QRCodeVersionSetInt32">
            <summary>设置 QRCodeEncoder.set_QRCodeVersion(Int32 value) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.SetStructureappendInt32Int32Int32">
            <summary>设置 QRCodeEncoder.setStructureappend(Int32 m, Int32 n, Int32 p) 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.calQrcode(System.Byte[])">
            <summary>设置 QRCodeEncoder.calQrcode(Byte[] qrcodeData) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.calStructureappendParity(System.SByte[])">
            <summary>设置 QRCodeEncoder.calStructureappendParity(SByte[] originaldata) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.setStructureappend(System.Int32,System.Int32,System.Int32)">
            <summary>设置 QRCodeEncoder.setStructureappend(Int32 m, Int32 n, Int32 p) 的 存根</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.QRCodeBackgroundColor">
            <summary>设置 QRCodeEncoder.get_QRCodeBackgroundColor() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.QRCodeEncodeMode">
            <summary>设置 QRCodeEncoder.get_QRCodeEncodeMode() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.QRCodeErrorCorrect">
            <summary>设置 QRCodeEncoder.get_QRCodeErrorCorrect() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.QRCodeForegroundColor">
            <summary>设置 QRCodeEncoder.get_QRCodeForegroundColor() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.QRCodeScale">
            <summary>设置 QRCodeEncoder.get_QRCodeScale() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Fakes.StubQRCodeEncoder.QRCodeVersion">
            <summary>设置 QRCodeEncoder.get_QRCodeVersion() 的 stub</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader">
            <summary>ThoughtWorks.QRCode.Codec.Reader.QRCodeDataBlockReader 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.#ctor(ThoughtWorks.QRCode.Codec.Reader.QRCodeDataBlockReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.ConstructorInt32ArrayInt32Int32">
            <summary>设置 QRCodeDataBlockReader.QRCodeDataBlockReader(Int32[] blocks, Int32 version, Int32 numErrorCorrectionCode) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.DataByteGet">
            <summary>设置 QRCodeDataBlockReader.get_DataByte() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.DataStringGet">
            <summary>设置 QRCodeDataBlockReader.get_DataString() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.NextModeGet">
            <summary>设置 QRCodeDataBlockReader.get_NextMode() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.get8bitByteArrayInt32">
            <summary>设置 QRCodeDataBlockReader.get8bitByteArray(Int32 dataLength) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.get8bitByteStringInt32">
            <summary>设置 QRCodeDataBlockReader.get8bitByteString(Int32 dataLength) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.getDataLengthInt32">
            <summary>设置 QRCodeDataBlockReader.getDataLength(Int32 modeIndicator) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.getFigureStringInt32">
            <summary>设置 QRCodeDataBlockReader.getFigureString(Int32 dataLength) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.getKanjiStringInt32">
            <summary>设置 QRCodeDataBlockReader.getKanjiString(Int32 dataLength) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.getNextBitsInt32">
            <summary>设置 QRCodeDataBlockReader.getNextBits(Int32 numBits) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.getRomanAndFigureStringInt32">
            <summary>设置 QRCodeDataBlockReader.getRomanAndFigureString(Int32 dataLength) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.guessModeInt32">
            <summary>设置 QRCodeDataBlockReader.guessMode(Int32 mode) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.AllInstances.DataByteGet">
            <summary>设置 QRCodeDataBlockReader.get_DataByte() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.AllInstances.DataStringGet">
            <summary>设置 QRCodeDataBlockReader.get_DataString() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.AllInstances.NextModeGet">
            <summary>设置 QRCodeDataBlockReader.get_NextMode() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.AllInstances.get8bitByteArrayInt32">
            <summary>设置 QRCodeDataBlockReader.get8bitByteArray(Int32 dataLength) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.AllInstances.get8bitByteStringInt32">
            <summary>设置 QRCodeDataBlockReader.get8bitByteString(Int32 dataLength) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.AllInstances.getDataLengthInt32">
            <summary>设置 QRCodeDataBlockReader.getDataLength(Int32 modeIndicator) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.AllInstances.getFigureStringInt32">
            <summary>设置 QRCodeDataBlockReader.getFigureString(Int32 dataLength) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.AllInstances.getKanjiStringInt32">
            <summary>设置 QRCodeDataBlockReader.getKanjiString(Int32 dataLength) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.AllInstances.getNextBitsInt32">
            <summary>设置 QRCodeDataBlockReader.getNextBits(Int32 numBits) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.AllInstances.getRomanAndFigureStringInt32">
            <summary>设置 QRCodeDataBlockReader.getRomanAndFigureString(Int32 dataLength) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeDataBlockReader.AllInstances.guessModeInt32">
            <summary>设置 QRCodeDataBlockReader.guessMode(Int32 mode) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader">
            <summary>ThoughtWorks.QRCode.Codec.Reader.QRCodeImageReader 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.#ctor(ThoughtWorks.QRCode.Codec.Reader.QRCodeImageReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.Constructor">
            <summary>设置 QRCodeImageReader.QRCodeImageReader() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.StaticConstructor">
            <summary>设置 QRCodeImageReader.QRCodeImageReader() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.applyCrossMaskingMedianFilterBooleanArrayArrayInt32">
            <summary>设置 QRCodeImageReader.applyCrossMaskingMedianFilter(Boolean[][] image, Int32 threshold) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.applyMedianFilterBooleanArrayArrayInt32">
            <summary>设置 QRCodeImageReader.applyMedianFilter(Boolean[][] image, Int32 threshold) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.filterImageInt32ArrayArray">
            <summary>设置 QRCodeImageReader.filterImage(Int32[][] image) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.getAreaModulePitchPointPointInt32">
            <summary>设置 QRCodeImageReader.getAreaModulePitch(Point start, Point end, Int32 logicalDistance) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.getMiddleBrightnessPerAreaInt32ArrayArray">
            <summary>设置 QRCodeImageReader.getMiddleBrightnessPerArea(Int32[][] image) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.getQRCodeMatrixBooleanArrayArraySamplingGrid">
            <summary>设置 QRCodeImageReader.getQRCodeMatrix(Boolean[][] image, SamplingGrid gridLines) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.getQRCodeSymbolInt32ArrayArray">
            <summary>设置 QRCodeImageReader.getQRCodeSymbol(Int32[][] image) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.getQRCodeSymbolWithAdjustedGridPoint">
            <summary>设置 QRCodeImageReader.getQRCodeSymbolWithAdjustedGrid(Point adjust) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.getSamplingGridFinderPatternAlignmentPattern">
            <summary>设置 QRCodeImageReader.getSamplingGrid(FinderPattern finderPattern, AlignmentPattern alignmentPattern) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.grayScaleToBitmapInt32ArrayArray">
            <summary>设置 QRCodeImageReader.grayScaleToBitmap(Int32[][] grayScale) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.imageToGrayScaleInt32ArrayArray">
            <summary>设置 QRCodeImageReader.imageToGrayScale(Int32[][] image) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.AllInstances.applyCrossMaskingMedianFilterBooleanArrayArrayInt32">
            <summary>设置 QRCodeImageReader.applyCrossMaskingMedianFilter(Boolean[][] image, Int32 threshold) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.AllInstances.applyMedianFilterBooleanArrayArrayInt32">
            <summary>设置 QRCodeImageReader.applyMedianFilter(Boolean[][] image, Int32 threshold) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.AllInstances.filterImageInt32ArrayArray">
            <summary>设置 QRCodeImageReader.filterImage(Int32[][] image) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.AllInstances.getAreaModulePitchPointPointInt32">
            <summary>设置 QRCodeImageReader.getAreaModulePitch(Point start, Point end, Int32 logicalDistance) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.AllInstances.getMiddleBrightnessPerAreaInt32ArrayArray">
            <summary>设置 QRCodeImageReader.getMiddleBrightnessPerArea(Int32[][] image) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.AllInstances.getQRCodeMatrixBooleanArrayArraySamplingGrid">
            <summary>设置 QRCodeImageReader.getQRCodeMatrix(Boolean[][] image, SamplingGrid gridLines) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.AllInstances.getQRCodeSymbolInt32ArrayArray">
            <summary>设置 QRCodeImageReader.getQRCodeSymbol(Int32[][] image) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.AllInstances.getQRCodeSymbolWithAdjustedGridPoint">
            <summary>设置 QRCodeImageReader.getQRCodeSymbolWithAdjustedGrid(Point adjust) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.AllInstances.getSamplingGridFinderPatternAlignmentPattern">
            <summary>设置 QRCodeImageReader.getSamplingGrid(FinderPattern finderPattern, AlignmentPattern alignmentPattern) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.AllInstances.grayScaleToBitmapInt32ArrayArray">
            <summary>设置 QRCodeImageReader.grayScaleToBitmap(Int32[][] grayScale) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.ShimQRCodeImageReader.AllInstances.imageToGrayScaleInt32ArrayArray">
            <summary>设置 QRCodeImageReader.imageToGrayScale(Int32[][] image) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Reader.Fakes.StubQRCodeDataBlockReader">
            <summary>ThoughtWorks.QRCode.Codec.Reader.QRCodeDataBlockReader 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Fakes.StubQRCodeDataBlockReader.#ctor(System.Int32[],System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Reader.Fakes.StubQRCodeDataBlockReader.DataByteGet">
            <summary>设置 QRCodeDataBlockReader.get_DataByte() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Reader.Fakes.StubQRCodeDataBlockReader.DataStringGet">
            <summary>设置 QRCodeDataBlockReader.get_DataString() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Reader.Fakes.StubQRCodeDataBlockReader.Get8bitByteArrayInt32">
            <summary>设置 QRCodeDataBlockReader.get8bitByteArray(Int32 dataLength) 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Fakes.StubQRCodeDataBlockReader.InitializeStub">
            <summary>初始化 type StubQRCodeDataBlockReader 的新实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Fakes.StubQRCodeDataBlockReader.get8bitByteArray(System.Int32)">
            <summary>设置 QRCodeDataBlockReader.get8bitByteArray(Int32 dataLength) 的 存根</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.StubQRCodeDataBlockReader.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.StubQRCodeDataBlockReader.DataByte">
            <summary>设置 QRCodeDataBlockReader.get_DataByte() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.StubQRCodeDataBlockReader.DataString">
            <summary>设置 QRCodeDataBlockReader.get_DataString() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.StubQRCodeDataBlockReader.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.StubQRCodeDataBlockReader.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Reader.Fakes.StubQRCodeImageReader">
            <summary>ThoughtWorks.QRCode.Codec.Reader.QRCodeImageReader 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Fakes.StubQRCodeImageReader.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Reader.Fakes.StubQRCodeImageReader.GetQRCodeSymbolInt32ArrayArray">
            <summary>设置 QRCodeImageReader.getQRCodeSymbol(Int32[][] image) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Reader.Fakes.StubQRCodeImageReader.GetQRCodeSymbolWithAdjustedGridPoint">
            <summary>设置 QRCodeImageReader.getQRCodeSymbolWithAdjustedGrid(Point adjust) 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Fakes.StubQRCodeImageReader.InitializeStub">
            <summary>初始化 type StubQRCodeImageReader 的新实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Fakes.StubQRCodeImageReader.getQRCodeSymbol(System.Int32[][])">
            <summary>设置 QRCodeImageReader.getQRCodeSymbol(Int32[][] image) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Fakes.StubQRCodeImageReader.getQRCodeSymbolWithAdjustedGrid(ThoughtWorks.QRCode.Geom.Point)">
            <summary>设置 QRCodeImageReader.getQRCodeSymbolWithAdjustedGrid(Point adjust) 的 存根</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.StubQRCodeImageReader.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.StubQRCodeImageReader.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Fakes.StubQRCodeImageReader.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimAlignmentPattern">
            <summary>ThoughtWorks.QRCode.Codec.Reader.Pattern.AlignmentPattern 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimAlignmentPattern.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimAlignmentPattern.#ctor(ThoughtWorks.QRCode.Codec.Reader.Pattern.AlignmentPattern)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimAlignmentPattern.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimAlignmentPattern.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimAlignmentPattern.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimAlignmentPattern.ConstructorPointArrayArrayInt32">
            <summary>设置 AlignmentPattern.AlignmentPattern(Point[][] center, Int32 patternDistance) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimAlignmentPattern.LogicalDistanceGet">
            <summary>设置 AlignmentPattern.get_LogicalDistance() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimAlignmentPattern.StaticConstructor">
            <summary>设置 AlignmentPattern.AlignmentPattern() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimAlignmentPattern.findAlignmentPatternBooleanArrayArrayFinderPattern">
            <summary>设置 AlignmentPattern.findAlignmentPattern(Boolean[][] image, FinderPattern finderPattern) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimAlignmentPattern.getCenter">
            <summary>设置 AlignmentPattern.getCenter() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimAlignmentPattern.getCenterBooleanArrayArrayFinderPatternPointArrayArray">
            <summary>设置 AlignmentPattern.getCenter(Boolean[][] image, FinderPattern finderPattern, Point[][] logicalCenters) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimAlignmentPattern.getLogicalCenterFinderPattern">
            <summary>设置 AlignmentPattern.getLogicalCenter(FinderPattern finderPattern) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimAlignmentPattern.getPrecisionCenterBooleanArrayArrayPoint">
            <summary>设置 AlignmentPattern.getPrecisionCenter(Boolean[][] image, Point targetPoint) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimAlignmentPattern.setCenterPointArrayArray">
            <summary>设置 AlignmentPattern.setCenter(Point[][] center) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimAlignmentPattern.targetPointOnTheCornerBooleanArrayArrayInt32Int32Int32Int32">
            <summary>设置 AlignmentPattern.targetPointOnTheCorner(Boolean[][] image, Int32 x, Int32 y, Int32 nx, Int32 ny) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimAlignmentPattern.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimAlignmentPattern.AllInstances.LogicalDistanceGet">
            <summary>设置 AlignmentPattern.get_LogicalDistance() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimAlignmentPattern.AllInstances.getCenter">
            <summary>设置 AlignmentPattern.getCenter() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimAlignmentPattern.AllInstances.setCenterPointArrayArray">
            <summary>设置 AlignmentPattern.setCenter(Point[][] center) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern">
            <summary>ThoughtWorks.QRCode.Codec.Reader.Pattern.FinderPattern 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.#ctor(ThoughtWorks.QRCode.Codec.Reader.Pattern.FinderPattern)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.ConstructorPointArrayInt32Int32ArrayInt32ArrayInt32Array">
            <summary>设置 FinderPattern.FinderPattern(Point[] center, Int32 version, Int32[] sincos, Int32[] width, Int32[] moduleSize) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.SqrtNumModulesGet">
            <summary>设置 FinderPattern.get_SqrtNumModules() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.StaticConstructor">
            <summary>设置 FinderPattern.FinderPattern() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.VersionGet">
            <summary>设置 FinderPattern.get_Version() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.calcExactVersionPointArrayInt32ArrayInt32ArrayBooleanArrayArray">
            <summary>设置 FinderPattern.calcExactVersion(Point[] centers, Int32[] angle, Int32[] moduleSize, Boolean[][] image) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.calcRoughVersionPointArrayInt32Array">
            <summary>设置 FinderPattern.calcRoughVersion(Point[] center, Int32[] width) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.cantNeighborLineLine">
            <summary>设置 FinderPattern.cantNeighbor(Line line1, Line line2) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.checkPatternInt32ArrayInt32">
            <summary>设置 FinderPattern.checkPattern(Int32[] buffer, Int32 pointer) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.checkVersionInfoBooleanArray">
            <summary>设置 FinderPattern.checkVersionInfo(Boolean[] target) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.findFinderPatternBooleanArrayArray">
            <summary>设置 FinderPattern.findFinderPattern(Boolean[][] image) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.findLineAcrossBooleanArrayArray">
            <summary>设置 FinderPattern.findLineAcross(Boolean[][] image) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.findLineCrossLineArray">
            <summary>设置 FinderPattern.findLineCross(Line[] lineAcross) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.getAngle">
            <summary>设置 FinderPattern.getAngle() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.getAnglePointArray">
            <summary>设置 FinderPattern.getAngle(Point[] centers) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.getCenter">
            <summary>设置 FinderPattern.getCenter() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.getCenterInt32">
            <summary>设置 FinderPattern.getCenter(Int32 position) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.getCenterLineArray">
            <summary>设置 FinderPattern.getCenter(Line[] crossLines) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.getModuleSize">
            <summary>设置 FinderPattern.getModuleSize() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.getModuleSizeInt32">
            <summary>设置 FinderPattern.getModuleSize(Int32 place) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.getPointAtSidePointArrayInt32Int32">
            <summary>设置 FinderPattern.getPointAtSide(Point[] points, Int32 side1, Int32 side2) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.getURQuadantInt32Array">
            <summary>设置 FinderPattern.getURQuadant(Int32[] angle) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.getWidthBooleanArrayArrayPointArrayInt32Array">
            <summary>设置 FinderPattern.getWidth(Boolean[][] image, Point[] centers, Int32[] sincos) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.getWidthInt32">
            <summary>设置 FinderPattern.getWidth(Int32 position) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.sortPointArrayInt32Array">
            <summary>设置 FinderPattern.sort(Point[] centers, Int32[] angle) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.AllInstances.SqrtNumModulesGet">
            <summary>设置 FinderPattern.get_SqrtNumModules() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.AllInstances.VersionGet">
            <summary>设置 FinderPattern.get_Version() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.AllInstances.getAngle">
            <summary>设置 FinderPattern.getAngle() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.AllInstances.getCenter">
            <summary>设置 FinderPattern.getCenter() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.AllInstances.getCenterInt32">
            <summary>设置 FinderPattern.getCenter(Int32 position) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.AllInstances.getModuleSize">
            <summary>设置 FinderPattern.getModuleSize() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.AllInstances.getModuleSizeInt32">
            <summary>设置 FinderPattern.getModuleSize(Int32 place) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimFinderPattern.AllInstances.getWidthInt32">
            <summary>设置 FinderPattern.getWidth(Int32 position) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimLogicalSeed">
            <summary>ThoughtWorks.QRCode.Codec.Reader.Pattern.LogicalSeed 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimLogicalSeed.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimLogicalSeed.#ctor(ThoughtWorks.QRCode.Codec.Reader.Pattern.LogicalSeed)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimLogicalSeed.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimLogicalSeed.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimLogicalSeed.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimLogicalSeed.Constructor">
            <summary>设置 LogicalSeed.LogicalSeed() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimLogicalSeed.StaticConstructor">
            <summary>设置 LogicalSeed.LogicalSeed() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimLogicalSeed.getSeedInt32">
            <summary>设置 LogicalSeed.getSeed(Int32 version) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimLogicalSeed.getSeedInt32Int32">
            <summary>设置 LogicalSeed.getSeed(Int32 version, Int32 patternNumber) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.ShimLogicalSeed.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.StubLogicalSeed">
            <summary>ThoughtWorks.QRCode.Codec.Reader.Pattern.LogicalSeed 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.StubLogicalSeed.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.StubLogicalSeed.InitializeStub">
            <summary>初始化 type StubLogicalSeed 的新实例</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.StubLogicalSeed.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.StubLogicalSeed.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Reader.Pattern.Fakes.StubLogicalSeed.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimColor_Fields">
            <summary>ThoughtWorks.QRCode.Codec.Util.Color_Fields 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimColor_Fields.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimColor_Fields.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimColor_Fields.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimColor_Fields.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimColor_Fields.StaticConstructor">
            <summary>设置 Color_Fields.Color_Fields() 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimColor_Fields.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimConsoleCanvas">
            <summary>ThoughtWorks.QRCode.Codec.Util.ConsoleCanvas 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimConsoleCanvas.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimConsoleCanvas.#ctor(ThoughtWorks.QRCode.Codec.Util.ConsoleCanvas)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimConsoleCanvas.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimConsoleCanvas.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimConsoleCanvas.Bind(ThoughtWorks.QRCode.Codec.Util.DebugCanvas)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimConsoleCanvas.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimConsoleCanvas.Constructor">
            <summary>设置 ConsoleCanvas.ConsoleCanvas() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimConsoleCanvas.drawCrossPointInt32">
            <summary>设置 ConsoleCanvas.drawCross(Point point, Int32 color) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimConsoleCanvas.drawLineLineInt32">
            <summary>设置 ConsoleCanvas.drawLine(Line line, Int32 color) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimConsoleCanvas.drawLinesLineArrayInt32">
            <summary>设置 ConsoleCanvas.drawLines(Line[] lines, Int32 color) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimConsoleCanvas.drawMatrixBooleanArrayArray">
            <summary>设置 ConsoleCanvas.drawMatrix(Boolean[][] matrix) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimConsoleCanvas.drawPointPointInt32">
            <summary>设置 ConsoleCanvas.drawPoint(Point point, Int32 color) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimConsoleCanvas.drawPointsPointArrayInt32">
            <summary>设置 ConsoleCanvas.drawPoints(Point[] points, Int32 color) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimConsoleCanvas.drawPolygonPointArrayInt32">
            <summary>设置 ConsoleCanvas.drawPolygon(Point[] points, Int32 color) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimConsoleCanvas.printlnString">
            <summary>设置 ConsoleCanvas.println(String str) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimConsoleCanvas.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimConsoleCanvas.AllInstances.drawCrossPointInt32">
            <summary>设置 ConsoleCanvas.drawCross(Point point, Int32 color) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimConsoleCanvas.AllInstances.drawLineLineInt32">
            <summary>设置 ConsoleCanvas.drawLine(Line line, Int32 color) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimConsoleCanvas.AllInstances.drawLinesLineArrayInt32">
            <summary>设置 ConsoleCanvas.drawLines(Line[] lines, Int32 color) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimConsoleCanvas.AllInstances.drawMatrixBooleanArrayArray">
            <summary>设置 ConsoleCanvas.drawMatrix(Boolean[][] matrix) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimConsoleCanvas.AllInstances.drawPointPointInt32">
            <summary>设置 ConsoleCanvas.drawPoint(Point point, Int32 color) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimConsoleCanvas.AllInstances.drawPointsPointArrayInt32">
            <summary>设置 ConsoleCanvas.drawPoints(Point[] points, Int32 color) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimConsoleCanvas.AllInstances.drawPolygonPointArrayInt32">
            <summary>设置 ConsoleCanvas.drawPolygon(Point[] points, Int32 color) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimConsoleCanvas.AllInstances.printlnString">
            <summary>设置 ConsoleCanvas.println(String str) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimContentConverter">
            <summary>ThoughtWorks.QRCode.Codec.Util.ContentConverter 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimContentConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimContentConverter.#ctor(ThoughtWorks.QRCode.Codec.Util.ContentConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimContentConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimContentConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimContentConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimContentConverter.Constructor">
            <summary>设置 ContentConverter.ContentConverter() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimContentConverter.StaticConstructor">
            <summary>设置 ContentConverter.ContentConverter() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimContentConverter.convertDocomoAddressBookString">
            <summary>设置 ContentConverter.convertDocomoAddressBook(String targetString) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimContentConverter.convertDocomoBookmarkString">
            <summary>设置 ContentConverter.convertDocomoBookmark(String targetString) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimContentConverter.convertDocomoMailtoString">
            <summary>设置 ContentConverter.convertDocomoMailto(String s) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimContentConverter.convertString">
            <summary>设置 ContentConverter.convert(String targetString) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimContentConverter.removeStringStringString">
            <summary>设置 ContentConverter.removeString(String s, String s1) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimContentConverter.replaceStringStringStringString">
            <summary>设置 ContentConverter.replaceString(String s, String s1, String s2) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimContentConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimDebugCanvasAdapter">
            <summary>ThoughtWorks.QRCode.Codec.Util.DebugCanvasAdapter 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimDebugCanvasAdapter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimDebugCanvasAdapter.#ctor(ThoughtWorks.QRCode.Codec.Util.DebugCanvasAdapter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimDebugCanvasAdapter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimDebugCanvasAdapter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimDebugCanvasAdapter.Bind(ThoughtWorks.QRCode.Codec.Util.DebugCanvas)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimDebugCanvasAdapter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimDebugCanvasAdapter.Constructor">
            <summary>设置 DebugCanvasAdapter.DebugCanvasAdapter() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimDebugCanvasAdapter.drawCrossPointInt32">
            <summary>设置 DebugCanvasAdapter.drawCross(Point point, Int32 color) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimDebugCanvasAdapter.drawLineLineInt32">
            <summary>设置 DebugCanvasAdapter.drawLine(Line line, Int32 color) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimDebugCanvasAdapter.drawLinesLineArrayInt32">
            <summary>设置 DebugCanvasAdapter.drawLines(Line[] lines, Int32 color) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimDebugCanvasAdapter.drawMatrixBooleanArrayArray">
            <summary>设置 DebugCanvasAdapter.drawMatrix(Boolean[][] matrix) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimDebugCanvasAdapter.drawPointPointInt32">
            <summary>设置 DebugCanvasAdapter.drawPoint(Point point, Int32 color) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimDebugCanvasAdapter.drawPointsPointArrayInt32">
            <summary>设置 DebugCanvasAdapter.drawPoints(Point[] points, Int32 color) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimDebugCanvasAdapter.drawPolygonPointArrayInt32">
            <summary>设置 DebugCanvasAdapter.drawPolygon(Point[] points, Int32 color) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimDebugCanvasAdapter.printlnString">
            <summary>设置 DebugCanvasAdapter.println(String string_Renamed) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimDebugCanvasAdapter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimDebugCanvasAdapter.AllInstances.drawCrossPointInt32">
            <summary>设置 DebugCanvasAdapter.drawCross(Point point, Int32 color) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimDebugCanvasAdapter.AllInstances.drawLineLineInt32">
            <summary>设置 DebugCanvasAdapter.drawLine(Line line, Int32 color) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimDebugCanvasAdapter.AllInstances.drawLinesLineArrayInt32">
            <summary>设置 DebugCanvasAdapter.drawLines(Line[] lines, Int32 color) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimDebugCanvasAdapter.AllInstances.drawMatrixBooleanArrayArray">
            <summary>设置 DebugCanvasAdapter.drawMatrix(Boolean[][] matrix) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimDebugCanvasAdapter.AllInstances.drawPointPointInt32">
            <summary>设置 DebugCanvasAdapter.drawPoint(Point point, Int32 color) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimDebugCanvasAdapter.AllInstances.drawPointsPointArrayInt32">
            <summary>设置 DebugCanvasAdapter.drawPoints(Point[] points, Int32 color) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimDebugCanvasAdapter.AllInstances.drawPolygonPointArrayInt32">
            <summary>设置 DebugCanvasAdapter.drawPolygon(Point[] points, Int32 color) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimDebugCanvasAdapter.AllInstances.printlnString">
            <summary>设置 DebugCanvasAdapter.println(String string_Renamed) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimQRCodeUtility">
            <summary>ThoughtWorks.QRCode.Codec.Util.QRCodeUtility 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimQRCodeUtility.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimQRCodeUtility.#ctor(ThoughtWorks.QRCode.Codec.Util.QRCodeUtility)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimQRCodeUtility.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimQRCodeUtility.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimQRCodeUtility.AsciiStringToByteArrayString">
            <summary>设置 QRCodeUtility.AsciiStringToByteArray(String str) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimQRCodeUtility.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimQRCodeUtility.Constructor">
            <summary>设置 QRCodeUtility.QRCodeUtility() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimQRCodeUtility.FromASCIIByteArrayByteArray">
            <summary>设置 QRCodeUtility.FromASCIIByteArray(Byte[] characters) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimQRCodeUtility.FromUnicodeByteArrayByteArray">
            <summary>设置 QRCodeUtility.FromUnicodeByteArray(Byte[] characters) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimQRCodeUtility.IsUniCodeString">
            <summary>设置 QRCodeUtility.IsUniCode(String value) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimQRCodeUtility.IsUnicodeByteArray">
            <summary>设置 QRCodeUtility.IsUnicode(Byte[] byteData) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimQRCodeUtility.UnicodeStringToByteArrayString">
            <summary>设置 QRCodeUtility.UnicodeStringToByteArray(String str) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimQRCodeUtility.sqrtInt32">
            <summary>设置 QRCodeUtility.sqrt(Int32 val) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimQRCodeUtility.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimSystemUtils">
            <summary>ThoughtWorks.QRCode.Codec.Util.SystemUtils 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimSystemUtils.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimSystemUtils.#ctor(ThoughtWorks.QRCode.Codec.Util.SystemUtils)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimSystemUtils.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimSystemUtils.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimSystemUtils.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimSystemUtils.Constructor">
            <summary>设置 SystemUtils.SystemUtils() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimSystemUtils.ReadInputStreamSByteArrayInt32Int32">
            <summary>设置 SystemUtils.ReadInput(Stream sourceStream, SByte[] target, Int32 start, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimSystemUtils.ReadInputTextReaderInt16ArrayInt32Int32">
            <summary>设置 SystemUtils.ReadInput(TextReader sourceTextReader, Int16[] target, Int32 start, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimSystemUtils.ToByteArrayObjectArray">
            <summary>设置 SystemUtils.ToByteArray(Object[] tempObjectArray) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimSystemUtils.ToByteArraySByteArray">
            <summary>设置 SystemUtils.ToByteArray(SByte[] sbyteArray) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimSystemUtils.ToByteArrayString">
            <summary>设置 SystemUtils.ToByteArray(String sourceString) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimSystemUtils.ToCharArrayByteArray">
            <summary>设置 SystemUtils.ToCharArray(Byte[] byteArray) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimSystemUtils.ToCharArraySByteArray">
            <summary>设置 SystemUtils.ToCharArray(SByte[] sByteArray) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimSystemUtils.ToSByteArrayByteArray">
            <summary>设置 SystemUtils.ToSByteArray(Byte[] byteArray) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimSystemUtils.URShiftInt32Int32">
            <summary>设置 SystemUtils.URShift(Int32 number, Int32 bits) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimSystemUtils.URShiftInt32Int64">
            <summary>设置 SystemUtils.URShift(Int32 number, Int64 bits) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimSystemUtils.URShiftInt64Int32">
            <summary>设置 SystemUtils.URShift(Int64 number, Int32 bits) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimSystemUtils.URShiftInt64Int64">
            <summary>设置 SystemUtils.URShift(Int64 number, Int64 bits) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimSystemUtils.WriteStackTraceExceptionTextWriter">
            <summary>设置 SystemUtils.WriteStackTrace(Exception throwable, TextWriter stream) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Util.Fakes.ShimSystemUtils.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Util.Fakes.StubColor">
            <summary>ThoughtWorks.QRCode.Codec.Util.Color 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubColor.#ctor">
            <summary>初始化 type StubColor 的新实例</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Util.Fakes.StubConsoleCanvas">
            <summary>ThoughtWorks.QRCode.Codec.Util.ConsoleCanvas 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubConsoleCanvas.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubConsoleCanvas.InitializeStub">
            <summary>初始化 type StubConsoleCanvas 的新实例</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.StubConsoleCanvas.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.StubConsoleCanvas.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.StubConsoleCanvas.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Util.Fakes.StubContentConverter">
            <summary>ThoughtWorks.QRCode.Codec.Util.ContentConverter 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubContentConverter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubContentConverter.InitializeStub">
            <summary>初始化 type StubContentConverter 的新实例</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.StubContentConverter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.StubContentConverter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.StubContentConverter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvas">
            <summary>ThoughtWorks.QRCode.Codec.Util.DebugCanvas 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvas.#ctor">
            <summary>初始化 type StubDebugCanvas 的新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvas.DrawCrossPointInt32">
            <summary>设置 DebugCanvas.drawCross(Point point, Int32 color) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvas.DrawLineLineInt32">
            <summary>设置 DebugCanvas.drawLine(Line line, Int32 color) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvas.DrawLinesLineArrayInt32">
            <summary>设置 DebugCanvas.drawLines(Line[] lines, Int32 color) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvas.DrawMatrixBooleanArrayArray">
            <summary>设置 DebugCanvas.drawMatrix(Boolean[][] matrix) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvas.DrawPointPointInt32">
            <summary>设置 DebugCanvas.drawPoint(Point point, Int32 color) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvas.DrawPointsPointArrayInt32">
            <summary>设置 DebugCanvas.drawPoints(Point[] points, Int32 color) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvas.DrawPolygonPointArrayInt32">
            <summary>设置 DebugCanvas.drawPolygon(Point[] points, Int32 color) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvas.PrintlnString">
            <summary>设置 DebugCanvas.println(String str) 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvas.twqrc::ThoughtWorks#QRCode#Codec#Util#DebugCanvas#drawCross(ThoughtWorks.QRCode.Geom.Point,System.Int32)">
            <summary>设置 DebugCanvas.drawCross(Point point, Int32 color) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvas.twqrc::ThoughtWorks#QRCode#Codec#Util#DebugCanvas#drawLine(ThoughtWorks.QRCode.Geom.Line,System.Int32)">
            <summary>设置 DebugCanvas.drawLine(Line line, Int32 color) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvas.twqrc::ThoughtWorks#QRCode#Codec#Util#DebugCanvas#drawLines(ThoughtWorks.QRCode.Geom.Line[],System.Int32)">
            <summary>设置 DebugCanvas.drawLines(Line[] lines, Int32 color) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvas.twqrc::ThoughtWorks#QRCode#Codec#Util#DebugCanvas#drawMatrix(System.Boolean[][])">
            <summary>设置 DebugCanvas.drawMatrix(Boolean[][] matrix) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvas.twqrc::ThoughtWorks#QRCode#Codec#Util#DebugCanvas#drawPoint(ThoughtWorks.QRCode.Geom.Point,System.Int32)">
            <summary>设置 DebugCanvas.drawPoint(Point point, Int32 color) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvas.twqrc::ThoughtWorks#QRCode#Codec#Util#DebugCanvas#drawPoints(ThoughtWorks.QRCode.Geom.Point[],System.Int32)">
            <summary>设置 DebugCanvas.drawPoints(Point[] points, Int32 color) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvas.twqrc::ThoughtWorks#QRCode#Codec#Util#DebugCanvas#drawPolygon(ThoughtWorks.QRCode.Geom.Point[],System.Int32)">
            <summary>设置 DebugCanvas.drawPolygon(Point[] points, Int32 color) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvas.twqrc::ThoughtWorks#QRCode#Codec#Util#DebugCanvas#println(System.String)">
            <summary>设置 DebugCanvas.println(String str) 的 存根</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvasAdapter">
            <summary>ThoughtWorks.QRCode.Codec.Util.DebugCanvasAdapter 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvasAdapter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvasAdapter.DrawCrossPointInt32">
            <summary>设置 DebugCanvasAdapter.drawCross(Point point, Int32 color) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvasAdapter.DrawLineLineInt32">
            <summary>设置 DebugCanvasAdapter.drawLine(Line line, Int32 color) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvasAdapter.DrawLinesLineArrayInt32">
            <summary>设置 DebugCanvasAdapter.drawLines(Line[] lines, Int32 color) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvasAdapter.DrawMatrixBooleanArrayArray">
            <summary>设置 DebugCanvasAdapter.drawMatrix(Boolean[][] matrix) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvasAdapter.DrawPointPointInt32">
            <summary>设置 DebugCanvasAdapter.drawPoint(Point point, Int32 color) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvasAdapter.DrawPointsPointArrayInt32">
            <summary>设置 DebugCanvasAdapter.drawPoints(Point[] points, Int32 color) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvasAdapter.DrawPolygonPointArrayInt32">
            <summary>设置 DebugCanvasAdapter.drawPolygon(Point[] points, Int32 color) 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvasAdapter.InitializeStub">
            <summary>初始化 type StubDebugCanvasAdapter 的新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvasAdapter.PrintlnString">
            <summary>设置 DebugCanvasAdapter.println(String string_Renamed) 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvasAdapter.drawCross(ThoughtWorks.QRCode.Geom.Point,System.Int32)">
            <summary>设置 DebugCanvasAdapter.drawCross(Point point, Int32 color) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvasAdapter.drawLine(ThoughtWorks.QRCode.Geom.Line,System.Int32)">
            <summary>设置 DebugCanvasAdapter.drawLine(Line line, Int32 color) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvasAdapter.drawLines(ThoughtWorks.QRCode.Geom.Line[],System.Int32)">
            <summary>设置 DebugCanvasAdapter.drawLines(Line[] lines, Int32 color) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvasAdapter.drawMatrix(System.Boolean[][])">
            <summary>设置 DebugCanvasAdapter.drawMatrix(Boolean[][] matrix) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvasAdapter.drawPoint(ThoughtWorks.QRCode.Geom.Point,System.Int32)">
            <summary>设置 DebugCanvasAdapter.drawPoint(Point point, Int32 color) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvasAdapter.drawPoints(ThoughtWorks.QRCode.Geom.Point[],System.Int32)">
            <summary>设置 DebugCanvasAdapter.drawPoints(Point[] points, Int32 color) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvasAdapter.drawPolygon(ThoughtWorks.QRCode.Geom.Point[],System.Int32)">
            <summary>设置 DebugCanvasAdapter.drawPolygon(Point[] points, Int32 color) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvasAdapter.println(System.String)">
            <summary>设置 DebugCanvasAdapter.println(String string_Renamed) 的 存根</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvasAdapter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvasAdapter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.StubDebugCanvasAdapter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Util.Fakes.StubQRCodeUtility">
            <summary>ThoughtWorks.QRCode.Codec.Util.QRCodeUtility 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubQRCodeUtility.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubQRCodeUtility.InitializeStub">
            <summary>初始化 type StubQRCodeUtility 的新实例</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.StubQRCodeUtility.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.StubQRCodeUtility.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.StubQRCodeUtility.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Codec.Util.Fakes.StubSystemUtils">
            <summary>ThoughtWorks.QRCode.Codec.Util.SystemUtils 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubSystemUtils.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Codec.Util.Fakes.StubSystemUtils.InitializeStub">
            <summary>初始化 type StubSystemUtils 的新实例</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.StubSystemUtils.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.StubSystemUtils.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Codec.Util.Fakes.StubSystemUtils.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimAlignmentPatternNotFoundException">
            <summary>ThoughtWorks.QRCode.ExceptionHandler.AlignmentPatternNotFoundException 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimAlignmentPatternNotFoundException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimAlignmentPatternNotFoundException.#ctor(ThoughtWorks.QRCode.ExceptionHandler.AlignmentPatternNotFoundException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimAlignmentPatternNotFoundException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimAlignmentPatternNotFoundException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimAlignmentPatternNotFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimAlignmentPatternNotFoundException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimAlignmentPatternNotFoundException.ConstructorString">
            <summary>设置 AlignmentPatternNotFoundException.AlignmentPatternNotFoundException(String message) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimAlignmentPatternNotFoundException.MessageGet">
            <summary>设置 AlignmentPatternNotFoundException.get_Message() 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimAlignmentPatternNotFoundException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimAlignmentPatternNotFoundException.AllInstances.MessageGet">
            <summary>设置 AlignmentPatternNotFoundException.get_Message() 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimDecodingFailedException">
            <summary>ThoughtWorks.QRCode.ExceptionHandler.DecodingFailedException 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimDecodingFailedException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimDecodingFailedException.#ctor(ThoughtWorks.QRCode.ExceptionHandler.DecodingFailedException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimDecodingFailedException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimDecodingFailedException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimDecodingFailedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimDecodingFailedException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimDecodingFailedException.ConstructorString">
            <summary>设置 DecodingFailedException.DecodingFailedException(String message) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimDecodingFailedException.MessageGet">
            <summary>设置 DecodingFailedException.get_Message() 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimDecodingFailedException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimDecodingFailedException.AllInstances.MessageGet">
            <summary>设置 DecodingFailedException.get_Message() 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimFinderPatternNotFoundException">
            <summary>ThoughtWorks.QRCode.ExceptionHandler.FinderPatternNotFoundException 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimFinderPatternNotFoundException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimFinderPatternNotFoundException.#ctor(ThoughtWorks.QRCode.ExceptionHandler.FinderPatternNotFoundException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimFinderPatternNotFoundException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimFinderPatternNotFoundException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimFinderPatternNotFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimFinderPatternNotFoundException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimFinderPatternNotFoundException.ConstructorString">
            <summary>设置 FinderPatternNotFoundException.FinderPatternNotFoundException(String message) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimFinderPatternNotFoundException.MessageGet">
            <summary>设置 FinderPatternNotFoundException.get_Message() 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimFinderPatternNotFoundException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimFinderPatternNotFoundException.AllInstances.MessageGet">
            <summary>设置 FinderPatternNotFoundException.get_Message() 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidDataBlockException">
            <summary>ThoughtWorks.QRCode.ExceptionHandler.InvalidDataBlockException 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidDataBlockException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidDataBlockException.#ctor(ThoughtWorks.QRCode.ExceptionHandler.InvalidDataBlockException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidDataBlockException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidDataBlockException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidDataBlockException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidDataBlockException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidDataBlockException.ConstructorString">
            <summary>设置 InvalidDataBlockException.InvalidDataBlockException(String message) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidDataBlockException.MessageGet">
            <summary>设置 InvalidDataBlockException.get_Message() 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidDataBlockException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidDataBlockException.AllInstances.MessageGet">
            <summary>设置 InvalidDataBlockException.get_Message() 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidVersionException">
            <summary>ThoughtWorks.QRCode.ExceptionHandler.InvalidVersionException 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidVersionException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidVersionException.#ctor(ThoughtWorks.QRCode.ExceptionHandler.InvalidVersionException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidVersionException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidVersionException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidVersionException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidVersionException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidVersionException.ConstructorString">
            <summary>设置 InvalidVersionException.InvalidVersionException(String message) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidVersionException.MessageGet">
            <summary>设置 InvalidVersionException.get_Message() 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidVersionException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidVersionException.AllInstances.MessageGet">
            <summary>设置 InvalidVersionException.get_Message() 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidVersionInfoException">
            <summary>ThoughtWorks.QRCode.ExceptionHandler.InvalidVersionInfoException 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidVersionInfoException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidVersionInfoException.#ctor(ThoughtWorks.QRCode.ExceptionHandler.InvalidVersionInfoException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidVersionInfoException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidVersionInfoException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidVersionInfoException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidVersionInfoException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidVersionInfoException.ConstructorString">
            <summary>设置 InvalidVersionInfoException.InvalidVersionInfoException(String message) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidVersionInfoException.MessageGet">
            <summary>设置 InvalidVersionInfoException.get_Message() 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidVersionInfoException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimInvalidVersionInfoException.AllInstances.MessageGet">
            <summary>设置 InvalidVersionInfoException.get_Message() 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimSymbolNotFoundException">
            <summary>ThoughtWorks.QRCode.ExceptionHandler.SymbolNotFoundException 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimSymbolNotFoundException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimSymbolNotFoundException.#ctor(ThoughtWorks.QRCode.ExceptionHandler.SymbolNotFoundException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimSymbolNotFoundException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimSymbolNotFoundException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimSymbolNotFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimSymbolNotFoundException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimSymbolNotFoundException.ConstructorString">
            <summary>设置 SymbolNotFoundException.SymbolNotFoundException(String message) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimSymbolNotFoundException.MessageGet">
            <summary>设置 SymbolNotFoundException.get_Message() 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimSymbolNotFoundException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimSymbolNotFoundException.AllInstances.MessageGet">
            <summary>设置 SymbolNotFoundException.get_Message() 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimVersionInformationException">
            <summary>ThoughtWorks.QRCode.ExceptionHandler.VersionInformationException 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimVersionInformationException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimVersionInformationException.#ctor(ThoughtWorks.QRCode.ExceptionHandler.VersionInformationException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimVersionInformationException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimVersionInformationException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimVersionInformationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimVersionInformationException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimVersionInformationException.Constructor">
            <summary>设置 VersionInformationException.VersionInformationException() 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.ExceptionHandler.Fakes.ShimVersionInformationException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException">
            <summary>ThoughtWorks.QRCode.ExceptionHandler.AlignmentPatternNotFoundException 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubAlignmentPatternNotFoundException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubAlignmentPatternNotFoundException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.InitializeStub">
            <summary>初始化 type StubAlignmentPatternNotFoundException 的新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.MessageGet">
            <summary>设置 AlignmentPatternNotFoundException.get_Message() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.ParamNameGet">
            <summary>设置 ArgumentException.get_ParamName() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.Message">
            <summary>设置 AlignmentPatternNotFoundException.get_Message() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.ParamName">
            <summary>设置 ArgumentException.get_ParamName() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubAlignmentPatternNotFoundException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException">
            <summary>ThoughtWorks.QRCode.ExceptionHandler.DecodingFailedException 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubDecodingFailedException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubDecodingFailedException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.InitializeStub">
            <summary>初始化 type StubDecodingFailedException 的新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.MessageGet">
            <summary>设置 DecodingFailedException.get_Message() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.ParamNameGet">
            <summary>设置 ArgumentException.get_ParamName() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.Message">
            <summary>设置 DecodingFailedException.get_Message() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.ParamName">
            <summary>设置 ArgumentException.get_ParamName() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubDecodingFailedException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubFinderPatternNotFoundException">
            <summary>ThoughtWorks.QRCode.ExceptionHandler.FinderPatternNotFoundException 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubFinderPatternNotFoundException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubFinderPatternNotFoundException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubFinderPatternNotFoundException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubFinderPatternNotFoundException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubFinderPatternNotFoundException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubFinderPatternNotFoundException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubFinderPatternNotFoundException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubFinderPatternNotFoundException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubFinderPatternNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubFinderPatternNotFoundException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubFinderPatternNotFoundException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubFinderPatternNotFoundException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubFinderPatternNotFoundException.InitializeStub">
            <summary>初始化 type StubFinderPatternNotFoundException 的新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubFinderPatternNotFoundException.MessageGet">
            <summary>设置 FinderPatternNotFoundException.get_Message() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubFinderPatternNotFoundException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubFinderPatternNotFoundException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubFinderPatternNotFoundException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubFinderPatternNotFoundException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubFinderPatternNotFoundException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubFinderPatternNotFoundException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubFinderPatternNotFoundException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubFinderPatternNotFoundException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubFinderPatternNotFoundException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubFinderPatternNotFoundException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubFinderPatternNotFoundException.Message">
            <summary>设置 FinderPatternNotFoundException.get_Message() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubFinderPatternNotFoundException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubFinderPatternNotFoundException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException">
            <summary>ThoughtWorks.QRCode.ExceptionHandler.InvalidDataBlockException 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubInvalidDataBlockException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubInvalidDataBlockException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.InitializeStub">
            <summary>初始化 type StubInvalidDataBlockException 的新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.MessageGet">
            <summary>设置 InvalidDataBlockException.get_Message() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.ParamNameGet">
            <summary>设置 ArgumentException.get_ParamName() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.Message">
            <summary>设置 InvalidDataBlockException.get_Message() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.ParamName">
            <summary>设置 ArgumentException.get_ParamName() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidDataBlockException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException">
            <summary>ThoughtWorks.QRCode.ExceptionHandler.InvalidVersionException 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubInvalidVersionException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubInvalidVersionException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.InitializeStub">
            <summary>初始化 type StubInvalidVersionException 的新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.MessageGet">
            <summary>设置 InvalidVersionException.get_Message() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.ParamNameGet">
            <summary>设置 ArgumentException.get_ParamName() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.Message">
            <summary>设置 InvalidVersionException.get_Message() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.ParamName">
            <summary>设置 ArgumentException.get_ParamName() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException">
            <summary>ThoughtWorks.QRCode.ExceptionHandler.InvalidVersionInfoException 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubInvalidVersionInfoException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubInvalidVersionInfoException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.InitializeStub">
            <summary>初始化 type StubInvalidVersionInfoException 的新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.MessageGet">
            <summary>设置 InvalidVersionInfoException.get_Message() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.ParamNameGet">
            <summary>设置 ArgumentException.get_ParamName() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.Message">
            <summary>设置 InvalidVersionInfoException.get_Message() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.ParamName">
            <summary>设置 ArgumentException.get_ParamName() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubInvalidVersionInfoException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException">
            <summary>ThoughtWorks.QRCode.ExceptionHandler.SymbolNotFoundException 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSymbolNotFoundException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSymbolNotFoundException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.InitializeStub">
            <summary>初始化 type StubSymbolNotFoundException 的新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.MessageGet">
            <summary>设置 SymbolNotFoundException.get_Message() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.ParamNameGet">
            <summary>设置 ArgumentException.get_ParamName() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.Message">
            <summary>设置 SymbolNotFoundException.get_Message() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.ParamName">
            <summary>设置 ArgumentException.get_ParamName() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubSymbolNotFoundException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException">
            <summary>ThoughtWorks.QRCode.ExceptionHandler.VersionInformationException 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubVersionInformationException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubVersionInformationException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.InitializeStub">
            <summary>初始化 type StubVersionInformationException 的新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.MessageGet">
            <summary>设置 ArgumentException.get_Message() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.ParamNameGet">
            <summary>设置 ArgumentException.get_ParamName() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.Message">
            <summary>设置 ArgumentException.get_Message() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.ParamName">
            <summary>设置 ArgumentException.get_ParamName() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.ExceptionHandler.Fakes.StubVersionInformationException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Geom.Fakes.ShimAxis">
            <summary>ThoughtWorks.QRCode.Geom.Axis 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.ShimAxis.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.ShimAxis.#ctor(ThoughtWorks.QRCode.Geom.Axis)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.ShimAxis.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.ShimAxis.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimAxis.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimAxis.ConstructorInt32ArrayInt32">
            <summary>设置 Axis.Axis(Int32[] angle, Int32 modulePitch) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimAxis.ModulePitchSetInt32">
            <summary>设置 Axis.set_ModulePitch(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimAxis.OriginSetPoint">
            <summary>设置 Axis.set_Origin(Point value) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimAxis.translateInt32Int32">
            <summary>设置 Axis.translate(Int32 moveX, Int32 moveY) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimAxis.translatePoint">
            <summary>设置 Axis.translate(Point offset) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimAxis.translatePointInt32Int32">
            <summary>设置 Axis.translate(Point origin, Int32 moveX, Int32 moveY) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimAxis.translatePointInt32Int32Int32">
            <summary>设置 Axis.translate(Point origin, Int32 modulePitch, Int32 moveX, Int32 moveY) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimAxis.translatePointPoint">
            <summary>设置 Axis.translate(Point origin, Point offset) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Geom.Fakes.ShimAxis.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimAxis.AllInstances.ModulePitchSetInt32">
            <summary>设置 Axis.set_ModulePitch(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimAxis.AllInstances.OriginSetPoint">
            <summary>设置 Axis.set_Origin(Point value) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimAxis.AllInstances.translateInt32Int32">
            <summary>设置 Axis.translate(Int32 moveX, Int32 moveY) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimAxis.AllInstances.translatePoint">
            <summary>设置 Axis.translate(Point offset) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimAxis.AllInstances.translatePointInt32Int32">
            <summary>设置 Axis.translate(Point origin, Int32 moveX, Int32 moveY) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimAxis.AllInstances.translatePointInt32Int32Int32">
            <summary>设置 Axis.translate(Point origin, Int32 modulePitch, Int32 moveX, Int32 moveY) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimAxis.AllInstances.translatePointPoint">
            <summary>设置 Axis.translate(Point origin, Point offset) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Geom.Fakes.ShimLine">
            <summary>ThoughtWorks.QRCode.Geom.Line 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.#ctor(ThoughtWorks.QRCode.Geom.Line)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.CenterGet">
            <summary>设置 Line.get_Center() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.Constructor">
            <summary>设置 Line.Line() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.ConstructorInt32Int32Int32Int32">
            <summary>设置 Line.Line(Int32 x1, Int32 y1, Int32 x2, Int32 y2) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.ConstructorPointPoint">
            <summary>设置 Line.Line(Point p1, Point p2) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.HorizontalGet">
            <summary>设置 Line.get_Horizontal() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.LengthGet">
            <summary>设置 Line.get_Length() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.ToString">
            <summary>设置 Line.ToString() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.VerticalGet">
            <summary>设置 Line.get_Vertical() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.getLongestLineArray">
            <summary>设置 Line.getLongest(Line[] lines) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.getP1">
            <summary>设置 Line.getP1() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.getP2">
            <summary>设置 Line.getP2() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.isCrossLineLine">
            <summary>设置 Line.isCross(Line line1, Line line2) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.isNeighborLineLine">
            <summary>设置 Line.isNeighbor(Line line1, Line line2) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.setLineInt32Int32Int32Int32">
            <summary>设置 Line.setLine(Int32 x1, Int32 y1, Int32 x2, Int32 y2) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.setP1Int32Int32">
            <summary>设置 Line.setP1(Int32 x1, Int32 y1) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.setP1Point">
            <summary>设置 Line.setP1(Point p1) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.setP2Int32Int32">
            <summary>设置 Line.setP2(Int32 x2, Int32 y2) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.setP2Point">
            <summary>设置 Line.setP2(Point p2) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.translateInt32Int32">
            <summary>设置 Line.translate(Int32 dx, Int32 dy) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.AllInstances.CenterGet">
            <summary>设置 Line.get_Center() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.AllInstances.HorizontalGet">
            <summary>设置 Line.get_Horizontal() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.AllInstances.LengthGet">
            <summary>设置 Line.get_Length() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.AllInstances.ToString01">
            <summary>设置 Line.ToString() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.AllInstances.VerticalGet">
            <summary>设置 Line.get_Vertical() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.AllInstances.getP1">
            <summary>设置 Line.getP1() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.AllInstances.getP2">
            <summary>设置 Line.getP2() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.AllInstances.setLineInt32Int32Int32Int32">
            <summary>设置 Line.setLine(Int32 x1, Int32 y1, Int32 x2, Int32 y2) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.AllInstances.setP1Int32Int32">
            <summary>设置 Line.setP1(Int32 x1, Int32 y1) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.AllInstances.setP1Point">
            <summary>设置 Line.setP1(Point p1) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.AllInstances.setP2Int32Int32">
            <summary>设置 Line.setP2(Int32 x2, Int32 y2) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.AllInstances.setP2Point">
            <summary>设置 Line.setP2(Point p2) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimLine.AllInstances.translateInt32Int32">
            <summary>设置 Line.translate(Int32 dx, Int32 dy) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint">
            <summary>ThoughtWorks.QRCode.Geom.Point 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.#ctor(ThoughtWorks.QRCode.Geom.Point)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.Constructor">
            <summary>设置 Point.Point() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.ConstructorInt32Int32">
            <summary>设置 Point.Point(Int32 x, Int32 y) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.ToString">
            <summary>设置 Point.ToString() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.XGet">
            <summary>设置 Point.get_X() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.XSetInt32">
            <summary>设置 Point.set_X(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.YGet">
            <summary>设置 Point.get_Y() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.YSetInt32">
            <summary>设置 Point.set_Y(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.distanceOfPoint">
            <summary>设置 Point.distanceOf(Point other) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.equalsPoint">
            <summary>设置 Point.equals(Point compare) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.getCenterPointPoint">
            <summary>设置 Point.getCenter(Point p1, Point p2) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.set_RenamedInt32Int32">
            <summary>设置 Point.set_Renamed(Int32 x, Int32 y) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.translateInt32Int32">
            <summary>设置 Point.translate(Int32 dx, Int32 dy) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.AllInstances.ToString01">
            <summary>设置 Point.ToString() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.AllInstances.XGet">
            <summary>设置 Point.get_X() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.AllInstances.XSetInt32">
            <summary>设置 Point.set_X(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.AllInstances.YGet">
            <summary>设置 Point.get_Y() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.AllInstances.YSetInt32">
            <summary>设置 Point.set_Y(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.AllInstances.distanceOfPoint">
            <summary>设置 Point.distanceOf(Point other) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.AllInstances.equalsPoint">
            <summary>设置 Point.equals(Point compare) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.AllInstances.set_RenamedInt32Int32">
            <summary>设置 Point.set_Renamed(Int32 x, Int32 y) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimPoint.AllInstances.translateInt32Int32">
            <summary>设置 Point.translate(Int32 dx, Int32 dy) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid">
            <summary>ThoughtWorks.QRCode.Geom.SamplingGrid 的填充码类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.#ctor(ThoughtWorks.QRCode.Geom.SamplingGrid)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.ConstructorInt32">
            <summary>设置 SamplingGrid.SamplingGrid(Int32 sqrtNumArea) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.TotalHeightGet">
            <summary>设置 SamplingGrid.get_TotalHeight() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.TotalWidthGet">
            <summary>设置 SamplingGrid.get_TotalWidth() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.adjustPoint">
            <summary>设置 SamplingGrid.adjust(Point adjust) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.getHeight">
            <summary>设置 SamplingGrid.getHeight() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.getHeightInt32Int32">
            <summary>设置 SamplingGrid.getHeight(Int32 ax, Int32 ay) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.getWidth">
            <summary>设置 SamplingGrid.getWidth() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.getWidthInt32Int32">
            <summary>设置 SamplingGrid.getWidth(Int32 ax, Int32 ay) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.getXInt32Int32">
            <summary>设置 SamplingGrid.getX(Int32 ax, Int32 x) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.getXLineInt32Int32Int32">
            <summary>设置 SamplingGrid.getXLine(Int32 ax, Int32 ay, Int32 x) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.getXLinesInt32Int32">
            <summary>设置 SamplingGrid.getXLines(Int32 ax, Int32 ay) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.getYInt32Int32">
            <summary>设置 SamplingGrid.getY(Int32 ay, Int32 y) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.getYLineInt32Int32Int32">
            <summary>设置 SamplingGrid.getYLine(Int32 ax, Int32 ay, Int32 y) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.getYLinesInt32Int32">
            <summary>设置 SamplingGrid.getYLines(Int32 ax, Int32 ay) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.initGridInt32Int32Int32Int32">
            <summary>设置 SamplingGrid.initGrid(Int32 ax, Int32 ay, Int32 width, Int32 height) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.setXLineInt32Int32Int32Line">
            <summary>设置 SamplingGrid.setXLine(Int32 ax, Int32 ay, Int32 x, Line line) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.setYLineInt32Int32Int32Line">
            <summary>设置 SamplingGrid.setYLine(Int32 ax, Int32 ay, Int32 y, Line line) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.AllInstances.TotalHeightGet">
            <summary>设置 SamplingGrid.get_TotalHeight() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.AllInstances.TotalWidthGet">
            <summary>设置 SamplingGrid.get_TotalWidth() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.AllInstances.adjustPoint">
            <summary>设置 SamplingGrid.adjust(Point adjust) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.AllInstances.getHeight">
            <summary>设置 SamplingGrid.getHeight() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.AllInstances.getHeightInt32Int32">
            <summary>设置 SamplingGrid.getHeight(Int32 ax, Int32 ay) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.AllInstances.getWidth">
            <summary>设置 SamplingGrid.getWidth() 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.AllInstances.getWidthInt32Int32">
            <summary>设置 SamplingGrid.getWidth(Int32 ax, Int32 ay) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.AllInstances.getXInt32Int32">
            <summary>设置 SamplingGrid.getX(Int32 ax, Int32 x) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.AllInstances.getXLineInt32Int32Int32">
            <summary>设置 SamplingGrid.getXLine(Int32 ax, Int32 ay, Int32 x) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.AllInstances.getXLinesInt32Int32">
            <summary>设置 SamplingGrid.getXLines(Int32 ax, Int32 ay) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.AllInstances.getYInt32Int32">
            <summary>设置 SamplingGrid.getY(Int32 ay, Int32 y) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.AllInstances.getYLineInt32Int32Int32">
            <summary>设置 SamplingGrid.getYLine(Int32 ax, Int32 ay, Int32 y) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.AllInstances.getYLinesInt32Int32">
            <summary>设置 SamplingGrid.getYLines(Int32 ax, Int32 ay) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.AllInstances.initGridInt32Int32Int32Int32">
            <summary>设置 SamplingGrid.initGrid(Int32 ax, Int32 ay, Int32 width, Int32 height) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.AllInstances.setXLineInt32Int32Int32Line">
            <summary>设置 SamplingGrid.setXLine(Int32 ax, Int32 ay, Int32 x, Line line) 的 填充码</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.ShimSamplingGrid.AllInstances.setYLineInt32Int32Int32Line">
            <summary>设置 SamplingGrid.setYLine(Int32 ax, Int32 ay, Int32 y, Line line) 的 填充码</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Geom.Fakes.StubAxis">
            <summary>ThoughtWorks.QRCode.Geom.Axis 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubAxis.#ctor(System.Int32[],System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubAxis.InitializeStub">
            <summary>初始化 type StubAxis 的新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubAxis.ModulePitchSetInt32">
            <summary>设置 Axis.set_ModulePitch(Int32 value) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubAxis.OriginSetPoint">
            <summary>设置 Axis.set_Origin(Point value) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubAxis.TranslateInt32Int32">
            <summary>设置 Axis.translate(Int32 moveX, Int32 moveY) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubAxis.TranslatePoint">
            <summary>设置 Axis.translate(Point offset) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubAxis.TranslatePointInt32Int32">
            <summary>设置 Axis.translate(Point origin, Int32 moveX, Int32 moveY) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubAxis.TranslatePointInt32Int32Int32">
            <summary>设置 Axis.translate(Point origin, Int32 modulePitch, Int32 moveX, Int32 moveY) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubAxis.TranslatePointPoint">
            <summary>设置 Axis.translate(Point origin, Point offset) 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubAxis.translate(ThoughtWorks.QRCode.Geom.Point)">
            <summary>设置 Axis.translate(Point offset) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubAxis.translate(ThoughtWorks.QRCode.Geom.Point,ThoughtWorks.QRCode.Geom.Point)">
            <summary>设置 Axis.translate(Point origin, Point offset) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubAxis.translate(System.Int32,System.Int32)">
            <summary>设置 Axis.translate(Int32 moveX, Int32 moveY) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubAxis.translate(ThoughtWorks.QRCode.Geom.Point,System.Int32,System.Int32)">
            <summary>设置 Axis.translate(Point origin, Int32 moveX, Int32 moveY) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubAxis.translate(ThoughtWorks.QRCode.Geom.Point,System.Int32,System.Int32,System.Int32)">
            <summary>设置 Axis.translate(Point origin, Int32 modulePitch, Int32 moveX, Int32 moveY) 的 存根</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.StubAxis.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.StubAxis.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.StubAxis.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.StubAxis.ModulePitch">
            <summary>设置 Axis.set_ModulePitch(Int32 value) 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.StubAxis.Origin">
            <summary>设置 Axis.set_Origin(Point value) 的 stub</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Geom.Fakes.StubLine">
            <summary>ThoughtWorks.QRCode.Geom.Line 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubLine.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubLine.#ctor(ThoughtWorks.QRCode.Geom.Point,ThoughtWorks.QRCode.Geom.Point)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubLine.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubLine.CenterGet">
            <summary>设置 Line.get_Center() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubLine.GetP1">
            <summary>设置 Line.getP1() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubLine.GetP2">
            <summary>设置 Line.getP2() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubLine.HorizontalGet">
            <summary>设置 Line.get_Horizontal() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubLine.InitializeStub">
            <summary>初始化 type StubLine 的新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubLine.LengthGet">
            <summary>设置 Line.get_Length() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubLine.SetLineInt32Int32Int32Int32">
            <summary>设置 Line.setLine(Int32 x1, Int32 y1, Int32 x2, Int32 y2) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubLine.SetP1Int32Int32">
            <summary>设置 Line.setP1(Int32 x1, Int32 y1) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubLine.SetP1Point">
            <summary>设置 Line.setP1(Point p1) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubLine.SetP2Int32Int32">
            <summary>设置 Line.setP2(Int32 x2, Int32 y2) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubLine.SetP2Point">
            <summary>设置 Line.setP2(Point p2) 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubLine.ToString">
            <summary>设置 Line.ToString() 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubLine.ToString01">
            <summary>设置 Line.ToString() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubLine.TranslateInt32Int32">
            <summary>设置 Line.translate(Int32 dx, Int32 dy) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubLine.VerticalGet">
            <summary>设置 Line.get_Vertical() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubLine.getP1">
            <summary>设置 Line.getP1() 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubLine.getP2">
            <summary>设置 Line.getP2() 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubLine.setLine(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>设置 Line.setLine(Int32 x1, Int32 y1, Int32 x2, Int32 y2) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubLine.setP1(ThoughtWorks.QRCode.Geom.Point)">
            <summary>设置 Line.setP1(Point p1) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubLine.setP1(System.Int32,System.Int32)">
            <summary>设置 Line.setP1(Int32 x1, Int32 y1) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubLine.setP2(ThoughtWorks.QRCode.Geom.Point)">
            <summary>设置 Line.setP2(Point p2) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubLine.setP2(System.Int32,System.Int32)">
            <summary>设置 Line.setP2(Int32 x2, Int32 y2) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubLine.translate(System.Int32,System.Int32)">
            <summary>设置 Line.translate(Int32 dx, Int32 dy) 的 存根</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.StubLine.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.StubLine.Center">
            <summary>设置 Line.get_Center() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.StubLine.Horizontal">
            <summary>设置 Line.get_Horizontal() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.StubLine.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.StubLine.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.StubLine.Length">
            <summary>设置 Line.get_Length() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.StubLine.Vertical">
            <summary>设置 Line.get_Vertical() 的 stub</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Geom.Fakes.StubPoint">
            <summary>ThoughtWorks.QRCode.Geom.Point 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubPoint.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubPoint.#ctor(System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubPoint.AttachBackingFieldToX">
            <summary>附加委托以将 StubPoint.X 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubPoint.AttachBackingFieldToY">
            <summary>附加委托以将 StubPoint.Y 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubPoint.DistanceOfPoint">
            <summary>设置 Point.distanceOf(Point other) 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubPoint.InitializeStub">
            <summary>初始化 type StubPoint 的新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubPoint.RenamedSetInt32Int32">
            <summary>设置 Point.set_Renamed(Int32 x, Int32 y) 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubPoint.ToString">
            <summary>设置 Point.ToString() 的 存根</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubPoint.ToString01">
            <summary>设置 Point.ToString() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubPoint.TranslateInt32Int32">
            <summary>设置 Point.translate(Int32 dx, Int32 dy) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubPoint.XGet">
            <summary>设置 Point.get_X() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubPoint.XSetInt32">
            <summary>设置 Point.set_X(Int32 value) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubPoint.YGet">
            <summary>设置 Point.get_Y() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubPoint.YSetInt32">
            <summary>设置 Point.set_Y(Int32 value) 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubPoint.distanceOf(ThoughtWorks.QRCode.Geom.Point)">
            <summary>设置 Point.distanceOf(Point other) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubPoint.set_Renamed(System.Int32,System.Int32)">
            <summary>设置 Point.set_Renamed(Int32 x, Int32 y) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubPoint.translate(System.Int32,System.Int32)">
            <summary>设置 Point.translate(Int32 dx, Int32 dy) 的 存根</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.StubPoint.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.StubPoint.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.StubPoint.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.StubPoint.X">
            <summary>设置 Point.get_X() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.StubPoint.Y">
            <summary>设置 Point.get_Y() 的 stub</summary>
        </member>
        <member name="T:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid">
            <summary>ThoughtWorks.QRCode.Geom.SamplingGrid 的存根类型</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.AdjustPoint">
            <summary>设置 SamplingGrid.adjust(Point adjust) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.GetHeight">
            <summary>设置 SamplingGrid.getHeight() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.GetHeightInt32Int32">
            <summary>设置 SamplingGrid.getHeight(Int32 ax, Int32 ay) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.GetWidth">
            <summary>设置 SamplingGrid.getWidth() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.GetWidthInt32Int32">
            <summary>设置 SamplingGrid.getWidth(Int32 ax, Int32 ay) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.GetXInt32Int32">
            <summary>设置 SamplingGrid.getX(Int32 ax, Int32 x) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.GetXLineInt32Int32Int32">
            <summary>设置 SamplingGrid.getXLine(Int32 ax, Int32 ay, Int32 x) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.GetXLinesInt32Int32">
            <summary>设置 SamplingGrid.getXLines(Int32 ax, Int32 ay) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.GetYInt32Int32">
            <summary>设置 SamplingGrid.getY(Int32 ay, Int32 y) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.GetYLineInt32Int32Int32">
            <summary>设置 SamplingGrid.getYLine(Int32 ax, Int32 ay, Int32 y) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.GetYLinesInt32Int32">
            <summary>设置 SamplingGrid.getYLines(Int32 ax, Int32 ay) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.InitGridInt32Int32Int32Int32">
            <summary>设置 SamplingGrid.initGrid(Int32 ax, Int32 ay, Int32 width, Int32 height) 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.InitializeStub">
            <summary>初始化 type StubSamplingGrid 的新实例</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.SetXLineInt32Int32Int32Line">
            <summary>设置 SamplingGrid.setXLine(Int32 ax, Int32 ay, Int32 x, Line line) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.SetYLineInt32Int32Int32Line">
            <summary>设置 SamplingGrid.setYLine(Int32 ax, Int32 ay, Int32 y, Line line) 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.TotalHeightGet">
            <summary>设置 SamplingGrid.get_TotalHeight() 的 stub</summary>
        </member>
        <member name="F:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.TotalWidthGet">
            <summary>设置 SamplingGrid.get_TotalWidth() 的 stub</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.adjust(ThoughtWorks.QRCode.Geom.Point)">
            <summary>设置 SamplingGrid.adjust(Point adjust) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.getHeight">
            <summary>设置 SamplingGrid.getHeight() 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.getHeight(System.Int32,System.Int32)">
            <summary>设置 SamplingGrid.getHeight(Int32 ax, Int32 ay) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.getWidth">
            <summary>设置 SamplingGrid.getWidth() 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.getWidth(System.Int32,System.Int32)">
            <summary>设置 SamplingGrid.getWidth(Int32 ax, Int32 ay) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.getX(System.Int32,System.Int32)">
            <summary>设置 SamplingGrid.getX(Int32 ax, Int32 x) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.getXLine(System.Int32,System.Int32,System.Int32)">
            <summary>设置 SamplingGrid.getXLine(Int32 ax, Int32 ay, Int32 x) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.getXLines(System.Int32,System.Int32)">
            <summary>设置 SamplingGrid.getXLines(Int32 ax, Int32 ay) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.getY(System.Int32,System.Int32)">
            <summary>设置 SamplingGrid.getY(Int32 ay, Int32 y) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.getYLine(System.Int32,System.Int32,System.Int32)">
            <summary>设置 SamplingGrid.getYLine(Int32 ax, Int32 ay, Int32 y) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.getYLines(System.Int32,System.Int32)">
            <summary>设置 SamplingGrid.getYLines(Int32 ax, Int32 ay) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.initGrid(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>设置 SamplingGrid.initGrid(Int32 ax, Int32 ay, Int32 width, Int32 height) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.setXLine(System.Int32,System.Int32,System.Int32,ThoughtWorks.QRCode.Geom.Line)">
            <summary>设置 SamplingGrid.setXLine(Int32 ax, Int32 ay, Int32 x, Line line) 的 存根</summary>
        </member>
        <member name="M:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.setYLine(System.Int32,System.Int32,System.Int32,ThoughtWorks.QRCode.Geom.Line)">
            <summary>设置 SamplingGrid.setYLine(Int32 ax, Int32 ay, Int32 y, Line line) 的 存根</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.TotalHeight">
            <summary>设置 SamplingGrid.get_TotalHeight() 的 stub</summary>
        </member>
        <member name="P:ThoughtWorks.QRCode.Geom.Fakes.StubSamplingGrid.TotalWidth">
            <summary>设置 SamplingGrid.get_TotalWidth() 的 stub</summary>
        </member>
    </members>
</doc>
